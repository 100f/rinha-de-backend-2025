
 app1 Pulling 
 nginx Pulling 
 app2 Pulling 
 redis Pulling 
 nginx Pulled 
 redis Pulled 
 fe07684b16b8 Already exists 
 95856d0221b2 Pulling fs layer 
 3a7d13606b66 Pulling fs layer 
 6708dbd5c5ce Pulling fs layer 
 d5a88a2605be Pulling fs layer 
 d5a88a2605be Waiting 
 fe07684b16b8 Already exists 
 95856d0221b2 Pulling fs layer 
 3a7d13606b66 Pulling fs layer 
 6708dbd5c5ce Pulling fs layer 
 d5a88a2605be Pulling fs layer 
 d5a88a2605be Waiting 
 6708dbd5c5ce Downloading [==================================================>]     209B/209B
 6708dbd5c5ce Verifying Checksum 
 6708dbd5c5ce Download complete 
 6708dbd5c5ce Downloading [==================================================>]     209B/209B
 6708dbd5c5ce Verifying Checksum 
 6708dbd5c5ce Download complete 
 3a7d13606b66 Download complete 
 3a7d13606b66 Downloading [==================================================>]      93B/93B
 3a7d13606b66 Verifying Checksum 
 3a7d13606b66 Download complete 
 95856d0221b2 Downloading [>                                                  ]  13.11kB/1.293MB
 95856d0221b2 Downloading [>                                                  ]  13.11kB/1.293MB
 95856d0221b2 Verifying Checksum 
 95856d0221b2 Download complete 
 95856d0221b2 Download complete 
 95856d0221b2 Extracting [=>                                                 ]  32.77kB/1.293MB
 95856d0221b2 Extracting [=>                                                 ]  32.77kB/1.293MB
 95856d0221b2 Extracting [==================================================>]  1.293MB/1.293MB
 95856d0221b2 Extracting [==================================================>]  1.293MB/1.293MB
 95856d0221b2 Extracting [==================================================>]  1.293MB/1.293MB
 95856d0221b2 Extracting [==================================================>]  1.293MB/1.293MB
 95856d0221b2 Pull complete 
 95856d0221b2 Pull complete 
 3a7d13606b66 Extracting [==================================================>]      93B/93B
 3a7d13606b66 Extracting [==================================================>]      93B/93B
 3a7d13606b66 Extracting [==================================================>]      93B/93B
 3a7d13606b66 Extracting [==================================================>]      93B/93B
 3a7d13606b66 Pull complete 
 3a7d13606b66 Pull complete 
 6708dbd5c5ce Extracting [==================================================>]     209B/209B
 6708dbd5c5ce Extracting [==================================================>]     209B/209B
 6708dbd5c5ce Extracting [==================================================>]     209B/209B
 6708dbd5c5ce Extracting [==================================================>]     209B/209B
 6708dbd5c5ce Pull complete 
 6708dbd5c5ce Pull complete 
 d5a88a2605be Downloading [>                                                  ]  98.67kB/9.78MB
 d5a88a2605be Downloading [>                                                  ]  98.67kB/9.78MB
 d5a88a2605be Download complete 
 d5a88a2605be Verifying Checksum 
 d5a88a2605be Download complete 
 d5a88a2605be Extracting [>                                                  ]   98.3kB/9.78MB
 d5a88a2605be Extracting [>                                                  ]   98.3kB/9.78MB
 d5a88a2605be Extracting [==================>                                ]  3.539MB/9.78MB
 d5a88a2605be Extracting [==================>                                ]  3.539MB/9.78MB
 d5a88a2605be Extracting [==========================>                        ]  5.112MB/9.78MB
 d5a88a2605be Extracting [==========================>                        ]  5.112MB/9.78MB
 d5a88a2605be Extracting [===================================>               ]  6.881MB/9.78MB
 d5a88a2605be Extracting [===================================>               ]  6.881MB/9.78MB
 d5a88a2605be Extracting [=========================================>         ]  8.061MB/9.78MB
 d5a88a2605be Extracting [=========================================>         ]  8.061MB/9.78MB
 d5a88a2605be Extracting [==================================================>]   9.78MB/9.78MB
 d5a88a2605be Extracting [==================================================>]   9.78MB/9.78MB
 d5a88a2605be Pull complete 
 d5a88a2605be Pull complete 
 app2 Pulled 
 app1 Pulled 
 Network kauan-carvalho-elixir_backend  Creating
 Network kauan-carvalho-elixir_backend  Created
 Container backend-fight-redis  Creating
 Container backend-fight-redis  Created
 Container app2  Creating
 Container app1  Creating
 Container app1  Created
 Container app2  Created
 Container backend-fight-nginx  Creating
 Container backend-fight-nginx  Created
Attaching to app1, app2, backend-fight-nginx, backend-fight-redis
backend-fight-redis  | Starting Redis Server
backend-fight-redis  | 1:C 16 Jul 2025 18:33:17.187 # WARNING Memory overcommit must be enabled! Without it, a background save or replication may fail under low memory condition. Being disabled, it can also cause failures without low memory condition, see https://github.com/jemalloc/jemalloc/issues/1328. To fix this issue add 'vm.overcommit_memory = 1' to /etc/sysctl.conf and then reboot or run the command 'sysctl vm.overcommit_memory=1' for this to take effect.
backend-fight-redis  | 1:C 16 Jul 2025 18:33:17.187 * oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo
backend-fight-redis  | 1:C 16 Jul 2025 18:33:17.187 * Redis version=8.0.3, bits=64, commit=00000000, modified=1, pid=1, just started
backend-fight-redis  | 1:C 16 Jul 2025 18:33:17.187 * Configuration loaded
backend-fight-redis  | 1:M 16 Jul 2025 18:33:17.187 * monotonic clock: POSIX clock_gettime
backend-fight-redis  | 1:M 16 Jul 2025 18:33:17.188 * Running mode=standalone, port=6379.
backend-fight-redis  | 1:M 16 Jul 2025 18:33:17.188 * <bf> RedisBloom version 8.0.1 (Git=unknown)
backend-fight-redis  | 1:M 16 Jul 2025 18:33:17.188 * <bf> Registering configuration options: [
backend-fight-redis  | 1:M 16 Jul 2025 18:33:17.188 * <bf> 	{ bf-error-rate       :      0.01 }
backend-fight-redis  | 1:M 16 Jul 2025 18:33:17.188 * <bf> 	{ bf-initial-size     :       100 }
backend-fight-redis  | 1:M 16 Jul 2025 18:33:17.188 * <bf> 	{ bf-expansion-factor :         2 }
backend-fight-redis  | 1:M 16 Jul 2025 18:33:17.188 * <bf> 	{ cf-bucket-size      :         2 }
backend-fight-redis  | 1:M 16 Jul 2025 18:33:17.188 * <bf> 	{ cf-initial-size     :      1024 }
backend-fight-redis  | 1:M 16 Jul 2025 18:33:17.188 * <bf> 	{ cf-max-iterations   :        20 }
backend-fight-redis  | 1:M 16 Jul 2025 18:33:17.188 * <bf> 	{ cf-expansion-factor :         1 }
backend-fight-redis  | 1:M 16 Jul 2025 18:33:17.188 * <bf> 	{ cf-max-expansions   :        32 }
backend-fight-redis  | 1:M 16 Jul 2025 18:33:17.188 * <bf> ]
backend-fight-redis  | 1:M 16 Jul 2025 18:33:17.189 * Module 'bf' loaded from /usr/local/lib/redis/modules//redisbloom.so
backend-fight-redis  | 1:M 16 Jul 2025 18:33:17.190 * <search> Redis version found by RedisSearch : 8.0.3 - oss
backend-fight-redis  | 1:M 16 Jul 2025 18:33:17.190 * <search> RediSearch version 8.0.1 (Git=5688fcc)
backend-fight-redis  | 1:M 16 Jul 2025 18:33:17.190 * <search> Low level api version 1 initialized successfully
backend-fight-redis  | 1:M 16 Jul 2025 18:33:17.190 * <search> gc: ON, prefix min length: 2, min word length to stem: 4, prefix max expansions: 200, query timeout (ms): 500, timeout policy: return, cursor read size: 1000, cursor max idle (ms): 300000, max doctable size: 1000000, max number of search results:  1000000, 
backend-fight-redis  | 1:M 16 Jul 2025 18:33:17.190 * <search> Initialized thread pools!
backend-fight-redis  | 1:M 16 Jul 2025 18:33:17.190 * <search> Disabled workers threadpool of size 0
backend-fight-redis  | 1:M 16 Jul 2025 18:33:17.190 * <search> Subscribe to config changes
backend-fight-redis  | 1:M 16 Jul 2025 18:33:17.190 * <search> Enabled role change notification
backend-fight-redis  | 1:M 16 Jul 2025 18:33:17.190 * <search> Cluster configuration: AUTO partitions, type: 0, coordinator timeout: 0ms
backend-fight-redis  | 1:M 16 Jul 2025 18:33:17.190 * <search> Register write commands
backend-fight-redis  | 1:M 16 Jul 2025 18:33:17.191 * Module 'search' loaded from /usr/local/lib/redis/modules//redisearch.so
backend-fight-redis  | 1:M 16 Jul 2025 18:33:17.191 * <timeseries> RedisTimeSeries version 80001, git_sha=577bfa8b5909e7ee572f0b651399be8303dc6641
backend-fight-redis  | 1:M 16 Jul 2025 18:33:17.191 * <timeseries> Redis version found by RedisTimeSeries : 8.0.3 - oss
backend-fight-redis  | 1:M 16 Jul 2025 18:33:17.191 * <timeseries> Registering configuration options: [
backend-fight-redis  | 1:M 16 Jul 2025 18:33:17.191 * <timeseries> 	{ ts-compaction-policy   :              }
backend-fight-redis  | 1:M 16 Jul 2025 18:33:17.191 * <timeseries> 	{ ts-num-threads         :            3 }
backend-fight-redis  | 1:M 16 Jul 2025 18:33:17.191 * <timeseries> 	{ ts-retention-policy    :            0 }
backend-fight-redis  | 1:M 16 Jul 2025 18:33:17.191 * <timeseries> 	{ ts-duplicate-policy    :        block }
backend-fight-redis  | 1:M 16 Jul 2025 18:33:17.191 * <timeseries> 	{ ts-chunk-size-bytes    :         4096 }
backend-fight-redis  | 1:M 16 Jul 2025 18:33:17.191 * <timeseries> 	{ ts-encoding            :   compressed }
backend-fight-redis  | 1:M 16 Jul 2025 18:33:17.191 * <timeseries> 	{ ts-ignore-max-time-diff:            0 }
backend-fight-redis  | 1:M 16 Jul 2025 18:33:17.191 * <timeseries> 	{ ts-ignore-max-val-diff :     0.000000 }
backend-fight-redis  | 1:M 16 Jul 2025 18:33:17.191 * <timeseries> ]
backend-fight-redis  | 1:M 16 Jul 2025 18:33:17.191 * <timeseries> Detected redis oss
backend-fight-redis  | 1:M 16 Jul 2025 18:33:17.191 * Module 'timeseries' loaded from /usr/local/lib/redis/modules//redistimeseries.so
backend-fight-redis  | 1:M 16 Jul 2025 18:33:17.192 * <ReJSON> Created new data type 'ReJSON-RL'
backend-fight-redis  | 1:M 16 Jul 2025 18:33:17.192 * <ReJSON> version: 80001 git sha: unknown branch: unknown
backend-fight-redis  | 1:M 16 Jul 2025 18:33:17.192 * <ReJSON> Exported RedisJSON_V1 API
backend-fight-redis  | 1:M 16 Jul 2025 18:33:17.192 * <ReJSON> Exported RedisJSON_V2 API
backend-fight-redis  | 1:M 16 Jul 2025 18:33:17.192 * <ReJSON> Exported RedisJSON_V3 API
backend-fight-redis  | 1:M 16 Jul 2025 18:33:17.192 * <ReJSON> Exported RedisJSON_V4 API
backend-fight-redis  | 1:M 16 Jul 2025 18:33:17.192 * <ReJSON> Exported RedisJSON_V5 API
backend-fight-redis  | 1:M 16 Jul 2025 18:33:17.192 * <ReJSON> Enabled diskless replication
backend-fight-redis  | 1:M 16 Jul 2025 18:33:17.192 * <ReJSON> Initialized shared string cache, thread safe: false.
backend-fight-redis  | 1:M 16 Jul 2025 18:33:17.192 * Module 'ReJSON' loaded from /usr/local/lib/redis/modules//rejson.so
backend-fight-redis  | 1:M 16 Jul 2025 18:33:17.192 * <search> Acquired RedisJSON_V5 API
backend-fight-redis  | 1:M 16 Jul 2025 18:33:17.192 * Server initialized
backend-fight-redis  | 1:M 16 Jul 2025 18:33:17.192 * Ready to accept connections tcp
app1                 | Running app...
app2                 | Running app...
backend-fight-nginx  | /docker-entrypoint.sh: /docker-entrypoint.d/ is not empty, will attempt to perform configuration
backend-fight-nginx  | /docker-entrypoint.sh: Looking for shell scripts in /docker-entrypoint.d/
backend-fight-nginx  | /docker-entrypoint.sh: Launching /docker-entrypoint.d/10-listen-on-ipv6-by-default.sh
backend-fight-nginx  | 10-listen-on-ipv6-by-default.sh: info: Getting the checksum of /etc/nginx/conf.d/default.conf
backend-fight-nginx  | 10-listen-on-ipv6-by-default.sh: info: Enabled listen on IPv6 in /etc/nginx/conf.d/default.conf
backend-fight-nginx  | /docker-entrypoint.sh: Sourcing /docker-entrypoint.d/15-local-resolvers.envsh
backend-fight-nginx  | /docker-entrypoint.sh: Launching /docker-entrypoint.d/20-envsubst-on-templates.sh
backend-fight-nginx  | /docker-entrypoint.sh: Launching /docker-entrypoint.d/30-tune-worker-processes.sh
backend-fight-nginx  | /docker-entrypoint.sh: Configuration complete; ready for start up
app1                 | 18:34:07.999 [error] ** (RuntimeError) Finch was unable to provide a connection within the timeout due to excess queuing for connections. Consider adjusting the pool size, count, timeout or reducing the rate of requests if it is possible that the downstream service is unable to keep up with the current rate.
app1                 | 
app1                 |     (nimble_pool 1.1.0) lib/nimble_pool.ex:518: NimblePool.exit!/3
app1                 |     (finch 0.20.0) lib/finch/http1/pool.ex:63: Finch.HTTP1.Pool.request/6
app1                 |     (finch 0.20.0) lib/finch.ex:494: anonymous fn/4 in Finch.request/3
app1                 |     (telemetry 1.3.0) /app/deps/telemetry/src/telemetry.erl:324: :telemetry.span/3
app1                 |     (backend_fight 0.1.0) lib/backend_fight/clients/http.ex:21: BackendFight.Clients.HTTP.do_request/2
app1                 |     (backend_fight 0.1.0) lib/backend_fight/clients/payment_processors/default/payments.ex:76: BackendFight.Clients.PaymentProcessors.Default.Payments.create/1
app1                 |     (backend_fight 0.1.0) lib/backend_fight/processors/payment_authorizer.ex:51: BackendFight.Processors.PaymentAuthorizer.handle_message/3
app1                 |     (broadway 1.2.1) lib/broadway/topology/processor_stage.ex:168: anonymous fn/6 in Broadway.Topology.ProcessorStage.handle_messages/4
app1                 | 
app1                 | 18:34:07.999 [error] ** (RuntimeError) Finch was unable to provide a connection within the timeout due to excess queuing for connections. Consider adjusting the pool size, count, timeout or reducing the rate of requests if it is possible that the downstream service is unable to keep up with the current rate.
app1                 | 
app1                 |     (nimble_pool 1.1.0) lib/nimble_pool.ex:518: NimblePool.exit!/3
app1                 |     (finch 0.20.0) lib/finch/http1/pool.ex:63: Finch.HTTP1.Pool.request/6
app1                 |     (finch 0.20.0) lib/finch.ex:494: anonymous fn/4 in Finch.request/3
app1                 |     (telemetry 1.3.0) /app/deps/telemetry/src/telemetry.erl:324: :telemetry.span/3
app1                 |     (backend_fight 0.1.0) lib/backend_fight/clients/http.ex:21: BackendFight.Clients.HTTP.do_request/2
app1                 |     (backend_fight 0.1.0) lib/backend_fight/clients/payment_processors/default/payments.ex:76: BackendFight.Clients.PaymentProcessors.Default.Payments.create/1
app1                 |     (backend_fight 0.1.0) lib/backend_fight/processors/payment_authorizer.ex:51: BackendFight.Processors.PaymentAuthorizer.handle_message/3
app1                 |     (broadway 1.2.1) lib/broadway/topology/processor_stage.ex:168: anonymous fn/6 in Broadway.Topology.ProcessorStage.handle_messages/4
app1                 | 
app1                 | 18:34:08.032 [error] ** (RuntimeError) Finch was unable to provide a connection within the timeout due to excess queuing for connections. Consider adjusting the pool size, count, timeout or reducing the rate of requests if it is possible that the downstream service is unable to keep up with the current rate.
app1                 | 
app1                 |     (nimble_pool 1.1.0) lib/nimble_pool.ex:518: NimblePool.exit!/3
app1                 |     (finch 0.20.0) lib/finch/http1/pool.ex:63: Finch.HTTP1.Pool.request/6
app1                 |     (finch 0.20.0) lib/finch.ex:494: anonymous fn/4 in Finch.request/3
app1                 |     (telemetry 1.3.0) /app/deps/telemetry/src/telemetry.erl:324: :telemetry.span/3
app1                 |     (backend_fight 0.1.0) lib/backend_fight/clients/http.ex:21: BackendFight.Clients.HTTP.do_request/2
app1                 |     (backend_fight 0.1.0) lib/backend_fight/clients/payment_processors/default/payments.ex:76: BackendFight.Clients.PaymentProcessors.Default.Payments.create/1
app1                 |     (backend_fight 0.1.0) lib/backend_fight/processors/payment_authorizer.ex:51: BackendFight.Processors.PaymentAuthorizer.handle_message/3
app1                 |     (broadway 1.2.1) lib/broadway/topology/processor_stage.ex:168: anonymous fn/6 in Broadway.Topology.ProcessorStage.handle_messages/4
app1                 | 
app1                 | 18:34:08.032 [error] ** (RuntimeError) Finch was unable to provide a connection within the timeout due to excess queuing for connections. Consider adjusting the pool size, count, timeout or reducing the rate of requests if it is possible that the downstream service is unable to keep up with the current rate.
app1                 | 
app1                 |     (nimble_pool 1.1.0) lib/nimble_pool.ex:518: NimblePool.exit!/3
app1                 |     (finch 0.20.0) lib/finch/http1/pool.ex:63: Finch.HTTP1.Pool.request/6
app1                 |     (finch 0.20.0) lib/finch.ex:494: anonymous fn/4 in Finch.request/3
app1                 |     (telemetry 1.3.0) /app/deps/telemetry/src/telemetry.erl:324: :telemetry.span/3
app1                 |     (backend_fight 0.1.0) lib/backend_fight/clients/http.ex:21: BackendFight.Clients.HTTP.do_request/2
app1                 |     (backend_fight 0.1.0) lib/backend_fight/clients/payment_processors/default/payments.ex:76: BackendFight.Clients.PaymentProcessors.Default.Payments.create/1
app1                 |     (backend_fight 0.1.0) lib/backend_fight/processors/payment_authorizer.ex:51: BackendFight.Processors.PaymentAuthorizer.handle_message/3
app1                 |     (broadway 1.2.1) lib/broadway/topology/processor_stage.ex:168: anonymous fn/6 in Broadway.Topology.ProcessorStage.handle_messages/4
app1                 | 
app1                 | 18:34:08.088 [error] ** (RuntimeError) Finch was unable to provide a connection within the timeout due to excess queuing for connections. Consider adjusting the pool size, count, timeout or reducing the rate of requests if it is possible that the downstream service is unable to keep up with the current rate.
app1                 | 
app1                 |     (nimble_pool 1.1.0) lib/nimble_pool.ex:518: NimblePool.exit!/3
app1                 |     (finch 0.20.0) lib/finch/http1/pool.ex:63: Finch.HTTP1.Pool.request/6
app1                 |     (finch 0.20.0) lib/finch.ex:494: anonymous fn/4 in Finch.request/3
app1                 |     (telemetry 1.3.0) /app/deps/telemetry/src/telemetry.erl:324: :telemetry.span/3
app1                 |     (backend_fight 0.1.0) lib/backend_fight/clients/http.ex:21: BackendFight.Clients.HTTP.do_request/2
app1                 |     (backend_fight 0.1.0) lib/backend_fight/clients/payment_processors/default/payments.ex:76: BackendFight.Clients.PaymentProcessors.Default.Payments.create/1
app1                 |     (backend_fight 0.1.0) lib/backend_fight/processors/payment_authorizer.ex:51: BackendFight.Processors.PaymentAuthorizer.handle_message/3
app1                 |     (broadway 1.2.1) lib/broadway/topology/processor_stage.ex:168: anonymous fn/6 in Broadway.Topology.ProcessorStage.handle_messages/4
app1                 | 
app1                 | 18:34:08.088 [error] ** (RuntimeError) Finch was unable to provide a connection within the timeout due to excess queuing for connections. Consider adjusting the pool size, count, timeout or reducing the rate of requests if it is possible that the downstream service is unable to keep up with the current rate.
app1                 | 
app1                 |     (nimble_pool 1.1.0) lib/nimble_pool.ex:518: NimblePool.exit!/3
app1                 |     (finch 0.20.0) lib/finch/http1/pool.ex:63: Finch.HTTP1.Pool.request/6
app1                 |     (finch 0.20.0) lib/finch.ex:494: anonymous fn/4 in Finch.request/3
app1                 |     (telemetry 1.3.0) /app/deps/telemetry/src/telemetry.erl:324: :telemetry.span/3
app1                 |     (backend_fight 0.1.0) lib/backend_fight/clients/http.ex:21: BackendFight.Clients.HTTP.do_request/2
app1                 |     (backend_fight 0.1.0) lib/backend_fight/clients/payment_processors/default/payments.ex:76: BackendFight.Clients.PaymentProcessors.Default.Payments.create/1
app1                 |     (backend_fight 0.1.0) lib/backend_fight/processors/payment_authorizer.ex:51: BackendFight.Processors.PaymentAuthorizer.handle_message/3
app1                 |     (broadway 1.2.1) lib/broadway/topology/processor_stage.ex:168: anonymous fn/6 in Broadway.Topology.ProcessorStage.handle_messages/4
app1                 | 
app1                 | 18:34:08.088 [error] ** (RuntimeError) Finch was unable to provide a connection within the timeout due to excess queuing for connections. Consider adjusting the pool size, count, timeout or reducing the rate of requests if it is possible that the downstream service is unable to keep up with the current rate.
app1                 | 
app1                 |     (nimble_pool 1.1.0) lib/nimble_pool.ex:518: NimblePool.exit!/3
app1                 |     (finch 0.20.0) lib/finch/http1/pool.ex:63: Finch.HTTP1.Pool.request/6
app1                 |     (finch 0.20.0) lib/finch.ex:494: anonymous fn/4 in Finch.request/3
app1                 |     (telemetry 1.3.0) /app/deps/telemetry/src/telemetry.erl:324: :telemetry.span/3
app1                 |     (backend_fight 0.1.0) lib/backend_fight/clients/http.ex:21: BackendFight.Clients.HTTP.do_request/2
app1                 |     (backend_fight 0.1.0) lib/backend_fight/clients/payment_processors/default/payments.ex:76: BackendFight.Clients.PaymentProcessors.Default.Payments.create/1
app1                 |     (backend_fight 0.1.0) lib/backend_fight/processors/payment_authorizer.ex:51: BackendFight.Processors.PaymentAuthorizer.handle_message/3
app1                 |     (broadway 1.2.1) lib/broadway/topology/processor_stage.ex:168: anonymous fn/6 in Broadway.Topology.ProcessorStage.handle_messages/4
app1                 | 
app1                 | 18:34:08.088 [error] ** (RuntimeError) Finch was unable to provide a connection within the timeout due to excess queuing for connections. Consider adjusting the pool size, count, timeout or reducing the rate of requests if it is possible that the downstream service is unable to keep up with the current rate.
app1                 | 
app1                 |     (nimble_pool 1.1.0) lib/nimble_pool.ex:518: NimblePool.exit!/3
app1                 |     (finch 0.20.0) lib/finch/http1/pool.ex:63: Finch.HTTP1.Pool.request/6
app1                 |     (finch 0.20.0) lib/finch.ex:494: anonymous fn/4 in Finch.request/3
app1                 |     (telemetry 1.3.0) /app/deps/telemetry/src/telemetry.erl:324: :telemetry.span/3
app1                 |     (backend_fight 0.1.0) lib/backend_fight/clients/http.ex:21: BackendFight.Clients.HTTP.do_request/2
app1                 |     (backend_fight 0.1.0) lib/backend_fight/clients/payment_processors/default/payments.ex:76: BackendFight.Clients.PaymentProcessors.Default.Payments.create/1
app1                 |     (backend_fight 0.1.0) lib/backend_fight/processors/payment_authorizer.ex:51: BackendFight.Processors.PaymentAuthorizer.handle_message/3
app1                 |     (broadway 1.2.1) lib/broadway/topology/processor_stage.ex:168: anonymous fn/6 in Broadway.Topology.ProcessorStage.handle_messages/4
app1                 | 
app1                 | 18:34:08.088 [error] ** (RuntimeError) Finch was unable to provide a connection within the timeout due to excess queuing for connections. Consider adjusting the pool size, count, timeout or reducing the rate of requests if it is possible that the downstream service is unable to keep up with the current rate.
app1                 | 
app1                 |     (nimble_pool 1.1.0) lib/nimble_pool.ex:518: NimblePool.exit!/3
app1                 |     (finch 0.20.0) lib/finch/http1/pool.ex:63: Finch.HTTP1.Pool.request/6
app1                 |     (finch 0.20.0) lib/finch.ex:494: anonymous fn/4 in Finch.request/3
app1                 |     (telemetry 1.3.0) /app/deps/telemetry/src/telemetry.erl:324: :telemetry.span/3
app1                 |     (backend_fight 0.1.0) lib/backend_fight/clients/http.ex:21: BackendFight.Clients.HTTP.do_request/2
app1                 |     (backend_fight 0.1.0) lib/backend_fight/clients/payment_processors/default/payments.ex:76: BackendFight.Clients.PaymentProcessors.Default.Payments.create/1
app1                 |     (backend_fight 0.1.0) lib/backend_fight/processors/payment_authorizer.ex:51: BackendFight.Processors.PaymentAuthorizer.handle_message/3
app1                 |     (broadway 1.2.1) lib/broadway/topology/processor_stage.ex:168: anonymous fn/6 in Broadway.Topology.ProcessorStage.handle_messages/4
app1                 | 
app1                 | 18:34:08.088 [error] ** (RuntimeError) Finch was unable to provide a connection within the timeout due to excess queuing for connections. Consider adjusting the pool size, count, timeout or reducing the rate of requests if it is possible that the downstream service is unable to keep up with the current rate.
app1                 | 
app1                 |     (nimble_pool 1.1.0) lib/nimble_pool.ex:518: NimblePool.exit!/3
app1                 |     (finch 0.20.0) lib/finch/http1/pool.ex:63: Finch.HTTP1.Pool.request/6
app1                 |     (finch 0.20.0) lib/finch.ex:494: anonymous fn/4 in Finch.request/3
app1                 |     (telemetry 1.3.0) /app/deps/telemetry/src/telemetry.erl:324: :telemetry.span/3
app1                 |     (backend_fight 0.1.0) lib/backend_fight/clients/http.ex:21: BackendFight.Clients.HTTP.do_request/2
app1                 |     (backend_fight 0.1.0) lib/backend_fight/clients/payment_processors/default/payments.ex:76: BackendFight.Clients.PaymentProcessors.Default.Payments.create/1
app1                 |     (backend_fight 0.1.0) lib/backend_fight/processors/payment_authorizer.ex:51: BackendFight.Processors.PaymentAuthorizer.handle_message/3
app1                 |     (broadway 1.2.1) lib/broadway/topology/processor_stage.ex:168: anonymous fn/6 in Broadway.Topology.ProcessorStage.handle_messages/4
app1                 | 
app1                 | 18:34:08.125 [error] ** (RuntimeError) Finch was unable to provide a connection within the timeout due to excess queuing for connections. Consider adjusting the pool size, count, timeout or reducing the rate of requests if it is possible that the downstream service is unable to keep up with the current rate.
app1                 | 
app1                 |     (nimble_pool 1.1.0) lib/nimble_pool.ex:518: NimblePool.exit!/3
app1                 |     (finch 0.20.0) lib/finch/http1/pool.ex:63: Finch.HTTP1.Pool.request/6
app1                 |     (finch 0.20.0) lib/finch.ex:494: anonymous fn/4 in Finch.request/3
app1                 |     (telemetry 1.3.0) /app/deps/telemetry/src/telemetry.erl:324: :telemetry.span/3
app1                 |     (backend_fight 0.1.0) lib/backend_fight/clients/http.ex:21: BackendFight.Clients.HTTP.do_request/2
app1                 |     (backend_fight 0.1.0) lib/backend_fight/clients/payment_processors/default/payments.ex:76: BackendFight.Clients.PaymentProcessors.Default.Payments.create/1
app1                 |     (backend_fight 0.1.0) lib/backend_fight/processors/payment_authorizer.ex:51: BackendFight.Processors.PaymentAuthorizer.handle_message/3
app1                 |     (broadway 1.2.1) lib/broadway/topology/processor_stage.ex:168: anonymous fn/6 in Broadway.Topology.ProcessorStage.handle_messages/4
app1                 | 
app1                 | 18:34:08.125 [error] ** (RuntimeError) Finch was unable to provide a connection within the timeout due to excess queuing for connections. Consider adjusting the pool size, count, timeout or reducing the rate of requests if it is possible that the downstream service is unable to keep up with the current rate.
app1                 | 
app1                 |     (nimble_pool 1.1.0) lib/nimble_pool.ex:518: NimblePool.exit!/3
app1                 |     (finch 0.20.0) lib/finch/http1/pool.ex:63: Finch.HTTP1.Pool.request/6
app1                 |     (finch 0.20.0) lib/finch.ex:494: anonymous fn/4 in Finch.request/3
app1                 |     (telemetry 1.3.0) /app/deps/telemetry/src/telemetry.erl:324: :telemetry.span/3
app1                 |     (backend_fight 0.1.0) lib/backend_fight/clients/http.ex:21: BackendFight.Clients.HTTP.do_request/2
app1                 |     (backend_fight 0.1.0) lib/backend_fight/clients/payment_processors/default/payments.ex:76: BackendFight.Clients.PaymentProcessors.Default.Payments.create/1
app1                 |     (backend_fight 0.1.0) lib/backend_fight/processors/payment_authorizer.ex:51: BackendFight.Processors.PaymentAuthorizer.handle_message/3
app1                 |     (broadway 1.2.1) lib/broadway/topology/processor_stage.ex:168: anonymous fn/6 in Broadway.Topology.ProcessorStage.handle_messages/4
app1                 | 
app1                 | 18:34:08.129 [error] ** (RuntimeError) Finch was unable to provide a connection within the timeout due to excess queuing for connections. Consider adjusting the pool size, count, timeout or reducing the rate of requests if it is possible that the downstream service is unable to keep up with the current rate.
app1                 | 
app1                 |     (nimble_pool 1.1.0) lib/nimble_pool.ex:518: NimblePool.exit!/3
app1                 |     (finch 0.20.0) lib/finch/http1/pool.ex:63: Finch.HTTP1.Pool.request/6
app1                 |     (finch 0.20.0) lib/finch.ex:494: anonymous fn/4 in Finch.request/3
app1                 |     (telemetry 1.3.0) /app/deps/telemetry/src/telemetry.erl:324: :telemetry.span/3
app1                 |     (backend_fight 0.1.0) lib/backend_fight/clients/http.ex:21: BackendFight.Clients.HTTP.do_request/2
app1                 |     (backend_fight 0.1.0) lib/backend_fight/clients/payment_processors/default/payments.ex:76: BackendFight.Clients.PaymentProcessors.Default.Payments.create/1
app1                 |     (backend_fight 0.1.0) lib/backend_fight/processors/payment_authorizer.ex:51: BackendFight.Processors.PaymentAuthorizer.handle_message/3
app1                 |     (broadway 1.2.1) lib/broadway/topology/processor_stage.ex:168: anonymous fn/6 in Broadway.Topology.ProcessorStage.handle_messages/4
app1                 | 
app1                 | 18:34:08.129 [error] ** (RuntimeError) Finch was unable to provide a connection within the timeout due to excess queuing for connections. Consider adjusting the pool size, count, timeout or reducing the rate of requests if it is possible that the downstream service is unable to keep up with the current rate.
app1                 | 
app1                 |     (nimble_pool 1.1.0) lib/nimble_pool.ex:518: NimblePool.exit!/3
app1                 |     (finch 0.20.0) lib/finch/http1/pool.ex:63: Finch.HTTP1.Pool.request/6
app1                 |     (finch 0.20.0) lib/finch.ex:494: anonymous fn/4 in Finch.request/3
app1                 |     (telemetry 1.3.0) /app/deps/telemetry/src/telemetry.erl:324: :telemetry.span/3
app1                 |     (backend_fight 0.1.0) lib/backend_fight/clients/http.ex:21: BackendFight.Clients.HTTP.do_request/2
app1                 |     (backend_fight 0.1.0) lib/backend_fight/clients/payment_processors/default/payments.ex:76: BackendFight.Clients.PaymentProcessors.Default.Payments.create/1
app1                 |     (backend_fight 0.1.0) lib/backend_fight/processors/payment_authorizer.ex:51: BackendFight.Processors.PaymentAuthorizer.handle_message/3
app1                 |     (broadway 1.2.1) lib/broadway/topology/processor_stage.ex:168: anonymous fn/6 in Broadway.Topology.ProcessorStage.handle_messages/4
app1                 | 
app1                 | 18:34:08.189 [error] ** (RuntimeError) Finch was unable to provide a connection within the timeout due to excess queuing for connections. Consider adjusting the pool size, count, timeout or reducing the rate of requests if it is possible that the downstream service is unable to keep up with the current rate.
app1                 | 
app1                 |     (nimble_pool 1.1.0) lib/nimble_pool.ex:518: NimblePool.exit!/3
app1                 |     (finch 0.20.0) lib/finch/http1/pool.ex:63: Finch.HTTP1.Pool.request/6
app1                 |     (finch 0.20.0) lib/finch.ex:494: anonymous fn/4 in Finch.request/3
app1                 |     (telemetry 1.3.0) /app/deps/telemetry/src/telemetry.erl:324: :telemetry.span/3
app1                 |     (backend_fight 0.1.0) lib/backend_fight/clients/http.ex:21: BackendFight.Clients.HTTP.do_request/2
app1                 |     (backend_fight 0.1.0) lib/backend_fight/clients/payment_processors/default/payments.ex:76: BackendFight.Clients.PaymentProcessors.Default.Payments.create/1
app1                 |     (backend_fight 0.1.0) lib/backend_fight/processors/payment_authorizer.ex:51: BackendFight.Processors.PaymentAuthorizer.handle_message/3
app1                 |     (broadway 1.2.1) lib/broadway/topology/processor_stage.ex:168: anonymous fn/6 in Broadway.Topology.ProcessorStage.handle_messages/4
app1                 | 
app1                 | 18:34:08.189 [error] ** (RuntimeError) Finch was unable to provide a connection within the timeout due to excess queuing for connections. Consider adjusting the pool size, count, timeout or reducing the rate of requests if it is possible that the downstream service is unable to keep up with the current rate.
app1                 | 
app1                 |     (nimble_pool 1.1.0) lib/nimble_pool.ex:518: NimblePool.exit!/3
app1                 |     (finch 0.20.0) lib/finch/http1/pool.ex:63: Finch.HTTP1.Pool.request/6
app1                 |     (finch 0.20.0) lib/finch.ex:494: anonymous fn/4 in Finch.request/3
app1                 |     (telemetry 1.3.0) /app/deps/telemetry/src/telemetry.erl:324: :telemetry.span/3
app1                 |     (backend_fight 0.1.0) lib/backend_fight/clients/http.ex:21: BackendFight.Clients.HTTP.do_request/2
app1                 |     (backend_fight 0.1.0) lib/backend_fight/clients/payment_processors/default/payments.ex:76: BackendFight.Clients.PaymentProcessors.Default.Payments.create/1
app1                 |     (backend_fight 0.1.0) lib/backend_fight/processors/payment_authorizer.ex:51: BackendFight.Processors.PaymentAuthorizer.handle_message/3
app1                 |     (broadway 1.2.1) lib/broadway/topology/processor_stage.ex:168: anonymous fn/6 in Broadway.Topology.ProcessorStage.handle_messages/4
app1                 | 
app1                 | 18:34:08.189 [error] ** (RuntimeError) Finch was unable to provide a connection within the timeout due to excess queuing for connections. Consider adjusting the pool size, count, timeout or reducing the rate of requests if it is possible that the downstream service is unable to keep up with the current rate.
app1                 | 
app1                 |     (nimble_pool 1.1.0) lib/nimble_pool.ex:518: NimblePool.exit!/3
app1                 |     (finch 0.20.0) lib/finch/http1/pool.ex:63: Finch.HTTP1.Pool.request/6
app1                 |     (finch 0.20.0) lib/finch.ex:494: anonymous fn/4 in Finch.request/3
app1                 |     (telemetry 1.3.0) /app/deps/telemetry/src/telemetry.erl:324: :telemetry.span/3
app1                 |     (backend_fight 0.1.0) lib/backend_fight/clients/http.ex:21: BackendFight.Clients.HTTP.do_request/2
app1                 |     (backend_fight 0.1.0) lib/backend_fight/clients/payment_processors/default/payments.ex:76: BackendFight.Clients.PaymentProcessors.Default.Payments.create/1
app1                 |     (backend_fight 0.1.0) lib/backend_fight/processors/payment_authorizer.ex:51: BackendFight.Processors.PaymentAuthorizer.handle_message/3
app1                 |     (broadway 1.2.1) lib/broadway/topology/processor_stage.ex:168: anonymous fn/6 in Broadway.Topology.ProcessorStage.handle_messages/4
app1                 | 
app1                 | 18:34:08.189 [error] ** (RuntimeError) Finch was unable to provide a connection within the timeout due to excess queuing for connections. Consider adjusting the pool size, count, timeout or reducing the rate of requests if it is possible that the downstream service is unable to keep up with the current rate.
app1                 | 
app1                 |     (nimble_pool 1.1.0) lib/nimble_pool.ex:518: NimblePool.exit!/3
app1                 |     (finch 0.20.0) lib/finch/http1/pool.ex:63: Finch.HTTP1.Pool.request/6
app1                 |     (finch 0.20.0) lib/finch.ex:494: anonymous fn/4 in Finch.request/3
app1                 |     (telemetry 1.3.0) /app/deps/telemetry/src/telemetry.erl:324: :telemetry.span/3
app1                 |     (backend_fight 0.1.0) lib/backend_fight/clients/http.ex:21: BackendFight.Clients.HTTP.do_request/2
app1                 |     (backend_fight 0.1.0) lib/backend_fight/clients/payment_processors/default/payments.ex:76: BackendFight.Clients.PaymentProcessors.Default.Payments.create/1
app1                 |     (backend_fight 0.1.0) lib/backend_fight/processors/payment_authorizer.ex:51: BackendFight.Processors.PaymentAuthorizer.handle_message/3
app1                 |     (broadway 1.2.1) lib/broadway/topology/processor_stage.ex:168: anonymous fn/6 in Broadway.Topology.ProcessorStage.handle_messages/4
app1                 | 
app1                 | 18:34:08.189 [error] ** (RuntimeError) Finch was unable to provide a connection within the timeout due to excess queuing for connections. Consider adjusting the pool size, count, timeout or reducing the rate of requests if it is possible that the downstream service is unable to keep up with the current rate.
app1                 | 
app1                 |     (nimble_pool 1.1.0) lib/nimble_pool.ex:518: NimblePool.exit!/3
app1                 |     (finch 0.20.0) lib/finch/http1/pool.ex:63: Finch.HTTP1.Pool.request/6
app1                 |     (finch 0.20.0) lib/finch.ex:494: anonymous fn/4 in Finch.request/3
app1                 |     (telemetry 1.3.0) /app/deps/telemetry/src/telemetry.erl:324: :telemetry.span/3
app1                 |     (backend_fight 0.1.0) lib/backend_fight/clients/http.ex:21: BackendFight.Clients.HTTP.do_request/2
app1                 |     (backend_fight 0.1.0) lib/backend_fight/clients/payment_processors/default/payments.ex:76: BackendFight.Clients.PaymentProcessors.Default.Payments.create/1
app1                 |     (backend_fight 0.1.0) lib/backend_fight/processors/payment_authorizer.ex:51: BackendFight.Processors.PaymentAuthorizer.handle_message/3
app1                 |     (broadway 1.2.1) lib/broadway/topology/processor_stage.ex:168: anonymous fn/6 in Broadway.Topology.ProcessorStage.handle_messages/4
app1                 | 
app1                 | 18:34:08.212 [error] ** (RuntimeError) Finch was unable to provide a connection within the timeout due to excess queuing for connections. Consider adjusting the pool size, count, timeout or reducing the rate of requests if it is possible that the downstream service is unable to keep up with the current rate.
app1                 | 
app1                 |     (nimble_pool 1.1.0) lib/nimble_pool.ex:518: NimblePool.exit!/3
app1                 |     (finch 0.20.0) lib/finch/http1/pool.ex:63: Finch.HTTP1.Pool.request/6
app1                 |     (finch 0.20.0) lib/finch.ex:494: anonymous fn/4 in Finch.request/3
app1                 |     (telemetry 1.3.0) /app/deps/telemetry/src/telemetry.erl:324: :telemetry.span/3
app1                 |     (backend_fight 0.1.0) lib/backend_fight/clients/http.ex:21: BackendFight.Clients.HTTP.do_request/2
app1                 |     (backend_fight 0.1.0) lib/backend_fight/clients/payment_processors/default/payments.ex:76: BackendFight.Clients.PaymentProcessors.Default.Payments.create/1
app1                 |     (backend_fight 0.1.0) lib/backend_fight/processors/payment_authorizer.ex:51: BackendFight.Processors.PaymentAuthorizer.handle_message/3
app1                 |     (broadway 1.2.1) lib/broadway/topology/processor_stage.ex:168: anonymous fn/6 in Broadway.Topology.ProcessorStage.handle_messages/4
app1                 | 
app1                 | 18:34:08.212 [error] ** (RuntimeError) Finch was unable to provide a connection within the timeout due to excess queuing for connections. Consider adjusting the pool size, count, timeout or reducing the rate of requests if it is possible that the downstream service is unable to keep up with the current rate.
app1                 | 
app1                 |     (nimble_pool 1.1.0) lib/nimble_pool.ex:518: NimblePool.exit!/3
app1                 |     (finch 0.20.0) lib/finch/http1/pool.ex:63: Finch.HTTP1.Pool.request/6
app1                 |     (finch 0.20.0) lib/finch.ex:494: anonymous fn/4 in Finch.request/3
app1                 |     (telemetry 1.3.0) /app/deps/telemetry/src/telemetry.erl:324: :telemetry.span/3
app1                 |     (backend_fight 0.1.0) lib/backend_fight/clients/http.ex:21: BackendFight.Clients.HTTP.do_request/2
app1                 |     (backend_fight 0.1.0) lib/backend_fight/clients/payment_processors/default/payments.ex:76: BackendFight.Clients.PaymentProcessors.Default.Payments.create/1
app1                 |     (backend_fight 0.1.0) lib/backend_fight/processors/payment_authorizer.ex:51: BackendFight.Processors.PaymentAuthorizer.handle_message/3
app1                 |     (broadway 1.2.1) lib/broadway/topology/processor_stage.ex:168: anonymous fn/6 in Broadway.Topology.ProcessorStage.handle_messages/4
app1                 | 
app1                 | 18:34:08.216 [error] ** (RuntimeError) Finch was unable to provide a connection within the timeout due to excess queuing for connections. Consider adjusting the pool size, count, timeout or reducing the rate of requests if it is possible that the downstream service is unable to keep up with the current rate.
app1                 | 
app1                 |     (nimble_pool 1.1.0) lib/nimble_pool.ex:518: NimblePool.exit!/3
app1                 |     (finch 0.20.0) lib/finch/http1/pool.ex:63: Finch.HTTP1.Pool.request/6
app1                 |     (finch 0.20.0) lib/finch.ex:494: anonymous fn/4 in Finch.request/3
app1                 |     (telemetry 1.3.0) /app/deps/telemetry/src/telemetry.erl:324: :telemetry.span/3
app1                 |     (backend_fight 0.1.0) lib/backend_fight/clients/http.ex:21: BackendFight.Clients.HTTP.do_request/2
app1                 |     (backend_fight 0.1.0) lib/backend_fight/clients/payment_processors/default/payments.ex:76: BackendFight.Clients.PaymentProcessors.Default.Payments.create/1
app1                 |     (backend_fight 0.1.0) lib/backend_fight/processors/payment_authorizer.ex:51: BackendFight.Processors.PaymentAuthorizer.handle_message/3
app1                 |     (broadway 1.2.1) lib/broadway/topology/processor_stage.ex:168: anonymous fn/6 in Broadway.Topology.ProcessorStage.handle_messages/4
app1                 | 
app1                 | 18:34:08.216 [error] ** (RuntimeError) Finch was unable to provide a connection within the timeout due to excess queuing for connections. Consider adjusting the pool size, count, timeout or reducing the rate of requests if it is possible that the downstream service is unable to keep up with the current rate.
app1                 | 
app1                 |     (nimble_pool 1.1.0) lib/nimble_pool.ex:518: NimblePool.exit!/3
app1                 |     (finch 0.20.0) lib/finch/http1/pool.ex:63: Finch.HTTP1.Pool.request/6
app1                 |     (finch 0.20.0) lib/finch.ex:494: anonymous fn/4 in Finch.request/3
app1                 |     (telemetry 1.3.0) /app/deps/telemetry/src/telemetry.erl:324: :telemetry.span/3
app1                 |     (backend_fight 0.1.0) lib/backend_fight/clients/http.ex:21: BackendFight.Clients.HTTP.do_request/2
app1                 |     (backend_fight 0.1.0) lib/backend_fight/clients/payment_processors/default/payments.ex:76: BackendFight.Clients.PaymentProcessors.Default.Payments.create/1
app1                 |     (backend_fight 0.1.0) lib/backend_fight/processors/payment_authorizer.ex:51: BackendFight.Processors.PaymentAuthorizer.handle_message/3
app1                 |     (broadway 1.2.1) lib/broadway/topology/processor_stage.ex:168: anonymous fn/6 in Broadway.Topology.ProcessorStage.handle_messages/4
app1                 | 
app1                 | 18:34:08.216 [error] ** (RuntimeError) Finch was unable to provide a connection within the timeout due to excess queuing for connections. Consider adjusting the pool size, count, timeout or reducing the rate of requests if it is possible that the downstream service is unable to keep up with the current rate.
app1                 | 
app1                 |     (nimble_pool 1.1.0) lib/nimble_pool.ex:518: NimblePool.exit!/3
app1                 |     (finch 0.20.0) lib/finch/http1/pool.ex:63: Finch.HTTP1.Pool.request/6
app1                 |     (finch 0.20.0) lib/finch.ex:494: anonymous fn/4 in Finch.request/3
app1                 |     (telemetry 1.3.0) /app/deps/telemetry/src/telemetry.erl:324: :telemetry.span/3
app1                 |     (backend_fight 0.1.0) lib/backend_fight/clients/http.ex:21: BackendFight.Clients.HTTP.do_request/2
app1                 |     (backend_fight 0.1.0) lib/backend_fight/clients/payment_processors/default/payments.ex:76: BackendFight.Clients.PaymentProcessors.Default.Payments.create/1
app1                 |     (backend_fight 0.1.0) lib/backend_fight/processors/payment_authorizer.ex:51: BackendFight.Processors.PaymentAuthorizer.handle_message/3
app1                 |     (broadway 1.2.1) lib/broadway/topology/processor_stage.ex:168: anonymous fn/6 in Broadway.Topology.ProcessorStage.handle_messages/4
app1                 | 
app1                 | 18:34:08.233 [error] ** (RuntimeError) Finch was unable to provide a connection within the timeout due to excess queuing for connections. Consider adjusting the pool size, count, timeout or reducing the rate of requests if it is possible that the downstream service is unable to keep up with the current rate.
app1                 | 
app1                 |     (nimble_pool 1.1.0) lib/nimble_pool.ex:518: NimblePool.exit!/3
app1                 |     (finch 0.20.0) lib/finch/http1/pool.ex:63: Finch.HTTP1.Pool.request/6
app1                 |     (finch 0.20.0) lib/finch.ex:494: anonymous fn/4 in Finch.request/3
app1                 |     (telemetry 1.3.0) /app/deps/telemetry/src/telemetry.erl:324: :telemetry.span/3
app1                 |     (backend_fight 0.1.0) lib/backend_fight/clients/http.ex:21: BackendFight.Clients.HTTP.do_request/2
app1                 |     (backend_fight 0.1.0) lib/backend_fight/clients/payment_processors/default/payments.ex:76: BackendFight.Clients.PaymentProcessors.Default.Payments.create/1
app1                 |     (backend_fight 0.1.0) lib/backend_fight/processors/payment_authorizer.ex:51: BackendFight.Processors.PaymentAuthorizer.handle_message/3
app1                 |     (broadway 1.2.1) lib/broadway/topology/processor_stage.ex:168: anonymous fn/6 in Broadway.Topology.ProcessorStage.handle_messages/4
app1                 | 
app1                 | 18:34:08.233 [error] ** (RuntimeError) Finch was unable to provide a connection within the timeout due to excess queuing for connections. Consider adjusting the pool size, count, timeout or reducing the rate of requests if it is possible that the downstream service is unable to keep up with the current rate.
app1                 | 
app1                 |     (nimble_pool 1.1.0) lib/nimble_pool.ex:518: NimblePool.exit!/3
app1                 |     (finch 0.20.0) lib/finch/http1/pool.ex:63: Finch.HTTP1.Pool.request/6
app1                 |     (finch 0.20.0) lib/finch.ex:494: anonymous fn/4 in Finch.request/3
app1                 |     (telemetry 1.3.0) /app/deps/telemetry/src/telemetry.erl:324: :telemetry.span/3
app1                 |     (backend_fight 0.1.0) lib/backend_fight/clients/http.ex:21: BackendFight.Clients.HTTP.do_request/2
app1                 |     (backend_fight 0.1.0) lib/backend_fight/clients/payment_processors/default/payments.ex:76: BackendFight.Clients.PaymentProcessors.Default.Payments.create/1
app1                 |     (backend_fight 0.1.0) lib/backend_fight/processors/payment_authorizer.ex:51: BackendFight.Processors.PaymentAuthorizer.handle_message/3
app1                 |     (broadway 1.2.1) lib/broadway/topology/processor_stage.ex:168: anonymous fn/6 in Broadway.Topology.ProcessorStage.handle_messages/4
app1                 | 
app1                 | 18:34:08.283 [error] ** (RuntimeError) Finch was unable to provide a connection within the timeout due to excess queuing for connections. Consider adjusting the pool size, count, timeout or reducing the rate of requests if it is possible that the downstream service is unable to keep up with the current rate.
app1                 | 
app1                 |     (nimble_pool 1.1.0) lib/nimble_pool.ex:518: NimblePool.exit!/3
app1                 |     (finch 0.20.0) lib/finch/http1/pool.ex:63: Finch.HTTP1.Pool.request/6
app1                 |     (finch 0.20.0) lib/finch.ex:494: anonymous fn/4 in Finch.request/3
app1                 |     (telemetry 1.3.0) /app/deps/telemetry/src/telemetry.erl:324: :telemetry.span/3
app1                 |     (backend_fight 0.1.0) lib/backend_fight/clients/http.ex:21: BackendFight.Clients.HTTP.do_request/2
app1                 |     (backend_fight 0.1.0) lib/backend_fight/clients/payment_processors/default/payments.ex:76: BackendFight.Clients.PaymentProcessors.Default.Payments.create/1
app1                 |     (backend_fight 0.1.0) lib/backend_fight/processors/payment_authorizer.ex:51: BackendFight.Processors.PaymentAuthorizer.handle_message/3
app1                 |     (broadway 1.2.1) lib/broadway/topology/processor_stage.ex:168: anonymous fn/6 in Broadway.Topology.ProcessorStage.handle_messages/4
app1                 | 
app1                 | 18:34:08.301 [error] ** (RuntimeError) Finch was unable to provide a connection within the timeout due to excess queuing for connections. Consider adjusting the pool size, count, timeout or reducing the rate of requests if it is possible that the downstream service is unable to keep up with the current rate.
app1                 | 
app1                 |     (nimble_pool 1.1.0) lib/nimble_pool.ex:518: NimblePool.exit!/3
app1                 |     (finch 0.20.0) lib/finch/http1/pool.ex:63: Finch.HTTP1.Pool.request/6
app1                 |     (finch 0.20.0) lib/finch.ex:494: anonymous fn/4 in Finch.request/3
app1                 |     (telemetry 1.3.0) /app/deps/telemetry/src/telemetry.erl:324: :telemetry.span/3
app1                 |     (backend_fight 0.1.0) lib/backend_fight/clients/http.ex:21: BackendFight.Clients.HTTP.do_request/2
app1                 |     (backend_fight 0.1.0) lib/backend_fight/clients/payment_processors/default/payments.ex:76: BackendFight.Clients.PaymentProcessors.Default.Payments.create/1
app1                 |     (backend_fight 0.1.0) lib/backend_fight/processors/payment_authorizer.ex:51: BackendFight.Processors.PaymentAuthorizer.handle_message/3
app1                 |     (broadway 1.2.1) lib/broadway/topology/processor_stage.ex:168: anonymous fn/6 in Broadway.Topology.ProcessorStage.handle_messages/4
app1                 | 
app1                 | 18:34:08.301 [error] ** (RuntimeError) Finch was unable to provide a connection within the timeout due to excess queuing for connections. Consider adjusting the pool size, count, timeout or reducing the rate of requests if it is possible that the downstream service is unable to keep up with the current rate.
app1                 | 
app1                 |     (nimble_pool 1.1.0) lib/nimble_pool.ex:518: NimblePool.exit!/3
app1                 |     (finch 0.20.0) lib/finch/http1/pool.ex:63: Finch.HTTP1.Pool.request/6
app1                 |     (finch 0.20.0) lib/finch.ex:494: anonymous fn/4 in Finch.request/3
app1                 |     (telemetry 1.3.0) /app/deps/telemetry/src/telemetry.erl:324: :telemetry.span/3
app1                 |     (backend_fight 0.1.0) lib/backend_fight/clients/http.ex:21: BackendFight.Clients.HTTP.do_request/2
app1                 |     (backend_fight 0.1.0) lib/backend_fight/clients/payment_processors/default/payments.ex:76: BackendFight.Clients.PaymentProcessors.Default.Payments.create/1
app1                 |     (backend_fight 0.1.0) lib/backend_fight/processors/payment_authorizer.ex:51: BackendFight.Processors.PaymentAuthorizer.handle_message/3
app1                 |     (broadway 1.2.1) lib/broadway/topology/processor_stage.ex:168: anonymous fn/6 in Broadway.Topology.ProcessorStage.handle_messages/4
app1                 | 
app1                 | 18:34:08.315 [error] ** (RuntimeError) Finch was unable to provide a connection within the timeout due to excess queuing for connections. Consider adjusting the pool size, count, timeout or reducing the rate of requests if it is possible that the downstream service is unable to keep up with the current rate.
app1                 | 
app1                 |     (nimble_pool 1.1.0) lib/nimble_pool.ex:518: NimblePool.exit!/3
app1                 |     (finch 0.20.0) lib/finch/http1/pool.ex:63: Finch.HTTP1.Pool.request/6
app1                 |     (finch 0.20.0) lib/finch.ex:494: anonymous fn/4 in Finch.request/3
app1                 |     (telemetry 1.3.0) /app/deps/telemetry/src/telemetry.erl:324: :telemetry.span/3
app1                 |     (backend_fight 0.1.0) lib/backend_fight/clients/http.ex:21: BackendFight.Clients.HTTP.do_request/2
app1                 |     (backend_fight 0.1.0) lib/backend_fight/clients/payment_processors/default/payments.ex:76: BackendFight.Clients.PaymentProcessors.Default.Payments.create/1
app1                 |     (backend_fight 0.1.0) lib/backend_fight/processors/payment_authorizer.ex:51: BackendFight.Processors.PaymentAuthorizer.handle_message/3
app1                 |     (broadway 1.2.1) lib/broadway/topology/processor_stage.ex:168: anonymous fn/6 in Broadway.Topology.ProcessorStage.handle_messages/4
app1                 | 
app1                 | 18:34:08.387 [error] ** (RuntimeError) Finch was unable to provide a connection within the timeout due to excess queuing for connections. Consider adjusting the pool size, count, timeout or reducing the rate of requests if it is possible that the downstream service is unable to keep up with the current rate.
app1                 | 
app1                 |     (nimble_pool 1.1.0) lib/nimble_pool.ex:518: NimblePool.exit!/3
app1                 |     (finch 0.20.0) lib/finch/http1/pool.ex:63: Finch.HTTP1.Pool.request/6
app1                 |     (finch 0.20.0) lib/finch.ex:494: anonymous fn/4 in Finch.request/3
app1                 |     (telemetry 1.3.0) /app/deps/telemetry/src/telemetry.erl:324: :telemetry.span/3
app1                 |     (backend_fight 0.1.0) lib/backend_fight/clients/http.ex:21: BackendFight.Clients.HTTP.do_request/2
app1                 |     (backend_fight 0.1.0) lib/backend_fight/clients/payment_processors/default/payments.ex:76: BackendFight.Clients.PaymentProcessors.Default.Payments.create/1
app1                 |     (backend_fight 0.1.0) lib/backend_fight/processors/payment_authorizer.ex:51: BackendFight.Processors.PaymentAuthorizer.handle_message/3
app1                 |     (broadway 1.2.1) lib/broadway/topology/processor_stage.ex:168: anonymous fn/6 in Broadway.Topology.ProcessorStage.handle_messages/4
app1                 | 
app1                 | 18:34:08.387 [error] ** (RuntimeError) Finch was unable to provide a connection within the timeout due to excess queuing for connections. Consider adjusting the pool size, count, timeout or reducing the rate of requests if it is possible that the downstream service is unable to keep up with the current rate.
app1                 | 
app1                 |     (nimble_pool 1.1.0) lib/nimble_pool.ex:518: NimblePool.exit!/3
app1                 |     (finch 0.20.0) lib/finch/http1/pool.ex:63: Finch.HTTP1.Pool.request/6
app1                 |     (finch 0.20.0) lib/finch.ex:494: anonymous fn/4 in Finch.request/3
app1                 |     (telemetry 1.3.0) /app/deps/telemetry/src/telemetry.erl:324: :telemetry.span/3
app1                 |     (backend_fight 0.1.0) lib/backend_fight/clients/http.ex:21: BackendFight.Clients.HTTP.do_request/2
app1                 |     (backend_fight 0.1.0) lib/backend_fight/clients/payment_processors/default/payments.ex:76: BackendFight.Clients.PaymentProcessors.Default.Payments.create/1
app1                 |     (backend_fight 0.1.0) lib/backend_fight/processors/payment_authorizer.ex:51: BackendFight.Processors.PaymentAuthorizer.handle_message/3
app1                 |     (broadway 1.2.1) lib/broadway/topology/processor_stage.ex:168: anonymous fn/6 in Broadway.Topology.ProcessorStage.handle_messages/4
app1                 | 
[Kbackend-fight-nginx exited with code 0
[Kapp2 exited with code 0
[Kapp1 exited with code 137
backend-fight-redis  | 1:signal-handler (1752690881) Received SIGTERM scheduling shutdown...
backend-fight-redis  | 1:M 16 Jul 2025 18:34:41.426 * User requested shutdown...
backend-fight-redis  | 1:M 16 Jul 2025 18:34:41.426 # Redis is now ready to exit, bye bye...
[Kbackend-fight-redis exited with code 0
log truncated at line 1000
