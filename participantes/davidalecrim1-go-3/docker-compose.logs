
 load-balancer Pulling 
 9824c27679d3 Already exists 
 c0960b39bb70 Pulling fs layer 
 5b60b8d21015 Pulling fs layer 
 408b12cc1435 Pulling fs layer 
 c0960b39bb70 Downloading [==================================================>]      92B/92B
 c0960b39bb70 Verifying Checksum 
 c0960b39bb70 Download complete 
 c0960b39bb70 Extracting [==================================================>]      92B/92B
 c0960b39bb70 Extracting [==================================================>]      92B/92B
 c0960b39bb70 Pull complete 
 408b12cc1435 Downloading [>                                                  ]   30.1kB/2.941MB
 408b12cc1435 Verifying Checksum 
 408b12cc1435 Download complete 
 5b60b8d21015 Downloading [>                                                  ]  30.05kB/2.94MB
 5b60b8d21015 Verifying Checksum 
 5b60b8d21015 Download complete 
 5b60b8d21015 Extracting [>                                                  ]  32.77kB/2.94MB
 5b60b8d21015 Extracting [==================================================>]   2.94MB/2.94MB
 5b60b8d21015 Pull complete 
 408b12cc1435 Extracting [>                                                  ]  32.77kB/2.941MB
 408b12cc1435 Extracting [==================================================>]  2.941MB/2.941MB
 408b12cc1435 Pull complete 
 load-balancer Pulled 
 Network davidalecrim1-go-3_app  Creating
 Network davidalecrim1-go-3_app  Created
 Container redis-db  Creating
 Container redis-db  Created
 Container go-backend-2  Creating
 Container go-backend-1  Creating
 Container go-backend-2  Created
 Container go-backend-1  Created
 Container load-balancer-extreme-proxy  Creating
 Container davidalecrim1-go-3-go-worker-1-1  Creating
 Container davidalecrim1-go-3-go-worker-1-1  Created
 Container load-balancer-extreme-proxy  Created
Attaching to go-worker-1-1, go-backend-1, go-backend-2, load-balancer-extreme-proxy, redis-db
redis-db                     | Starting Redis Server
redis-db                     | 1:C 09 Aug 2025 13:59:20.623 # WARNING Memory overcommit must be enabled! Without it, a background save or replication may fail under low memory condition. Being disabled, it can also cause failures without low memory condition, see https://github.com/jemalloc/jemalloc/issues/1328. To fix this issue add 'vm.overcommit_memory = 1' to /etc/sysctl.conf and then reboot or run the command 'sysctl vm.overcommit_memory=1' for this to take effect.
redis-db                     | 1:C 09 Aug 2025 13:59:20.623 * oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo
redis-db                     | 1:C 09 Aug 2025 13:59:20.623 * Redis version=8.0.3, bits=64, commit=00000000, modified=1, pid=1, just started
redis-db                     | 1:C 09 Aug 2025 13:59:20.623 * Configuration loaded
redis-db                     | 1:M 09 Aug 2025 13:59:20.623 * monotonic clock: POSIX clock_gettime
redis-db                     | 1:M 09 Aug 2025 13:59:20.624 * Running mode=standalone, port=6379.
redis-db                     | 1:M 09 Aug 2025 13:59:20.624 * <bf> RedisBloom version 8.0.1 (Git=unknown)
redis-db                     | 1:M 09 Aug 2025 13:59:20.624 * <bf> Registering configuration options: [
redis-db                     | 1:M 09 Aug 2025 13:59:20.624 * <bf> 	{ bf-error-rate       :      0.01 }
redis-db                     | 1:M 09 Aug 2025 13:59:20.624 * <bf> 	{ bf-initial-size     :       100 }
redis-db                     | 1:M 09 Aug 2025 13:59:20.624 * <bf> 	{ bf-expansion-factor :         2 }
redis-db                     | 1:M 09 Aug 2025 13:59:20.624 * <bf> 	{ cf-bucket-size      :         2 }
redis-db                     | 1:M 09 Aug 2025 13:59:20.624 * <bf> 	{ cf-initial-size     :      1024 }
redis-db                     | 1:M 09 Aug 2025 13:59:20.624 * <bf> 	{ cf-max-iterations   :        20 }
redis-db                     | 1:M 09 Aug 2025 13:59:20.624 * <bf> 	{ cf-expansion-factor :         1 }
redis-db                     | 1:M 09 Aug 2025 13:59:20.624 * <bf> 	{ cf-max-expansions   :        32 }
redis-db                     | 1:M 09 Aug 2025 13:59:20.624 * <bf> ]
redis-db                     | 1:M 09 Aug 2025 13:59:20.625 * Module 'bf' loaded from /usr/local/lib/redis/modules//redisbloom.so
redis-db                     | 1:M 09 Aug 2025 13:59:20.627 * <search> Redis version found by RedisSearch : 8.0.3 - oss
redis-db                     | 1:M 09 Aug 2025 13:59:20.627 * <search> RediSearch version 8.0.1 (Git=5688fcc)
redis-db                     | 1:M 09 Aug 2025 13:59:20.627 * <search> Low level api version 1 initialized successfully
redis-db                     | 1:M 09 Aug 2025 13:59:20.627 * <search> gc: ON, prefix min length: 2, min word length to stem: 4, prefix max expansions: 200, query timeout (ms): 500, timeout policy: return, cursor read size: 1000, cursor max idle (ms): 300000, max doctable size: 1000000, max number of search results:  1000000, 
redis-db                     | 1:M 09 Aug 2025 13:59:20.627 * <search> Initialized thread pools!
redis-db                     | 1:M 09 Aug 2025 13:59:20.627 * <search> Disabled workers threadpool of size 0
redis-db                     | 1:M 09 Aug 2025 13:59:20.627 * <search> Subscribe to config changes
redis-db                     | 1:M 09 Aug 2025 13:59:20.627 * <search> Enabled role change notification
redis-db                     | 1:M 09 Aug 2025 13:59:20.628 * <search> Cluster configuration: AUTO partitions, type: 0, coordinator timeout: 0ms
redis-db                     | 1:M 09 Aug 2025 13:59:20.628 * <search> Register write commands
redis-db                     | 1:M 09 Aug 2025 13:59:20.628 * Module 'search' loaded from /usr/local/lib/redis/modules//redisearch.so
redis-db                     | 1:M 09 Aug 2025 13:59:20.628 * <timeseries> RedisTimeSeries version 80001, git_sha=577bfa8b5909e7ee572f0b651399be8303dc6641
redis-db                     | 1:M 09 Aug 2025 13:59:20.628 * <timeseries> Redis version found by RedisTimeSeries : 8.0.3 - oss
redis-db                     | 1:M 09 Aug 2025 13:59:20.628 * <timeseries> Registering configuration options: [
redis-db                     | 1:M 09 Aug 2025 13:59:20.628 * <timeseries> 	{ ts-compaction-policy   :              }
redis-db                     | 1:M 09 Aug 2025 13:59:20.628 * <timeseries> 	{ ts-num-threads         :            3 }
redis-db                     | 1:M 09 Aug 2025 13:59:20.628 * <timeseries> 	{ ts-retention-policy    :            0 }
redis-db                     | 1:M 09 Aug 2025 13:59:20.629 * <timeseries> 	{ ts-duplicate-policy    :        block }
redis-db                     | 1:M 09 Aug 2025 13:59:20.629 * <timeseries> 	{ ts-chunk-size-bytes    :         4096 }
redis-db                     | 1:M 09 Aug 2025 13:59:20.629 * <timeseries> 	{ ts-encoding            :   compressed }
redis-db                     | 1:M 09 Aug 2025 13:59:20.629 * <timeseries> 	{ ts-ignore-max-time-diff:            0 }
redis-db                     | 1:M 09 Aug 2025 13:59:20.629 * <timeseries> 	{ ts-ignore-max-val-diff :     0.000000 }
redis-db                     | 1:M 09 Aug 2025 13:59:20.629 * <timeseries> ]
redis-db                     | 1:M 09 Aug 2025 13:59:20.629 * <timeseries> Detected redis oss
redis-db                     | 1:M 09 Aug 2025 13:59:20.629 * Module 'timeseries' loaded from /usr/local/lib/redis/modules//redistimeseries.so
redis-db                     | 1:M 09 Aug 2025 13:59:20.630 * <ReJSON> Created new data type 'ReJSON-RL'
redis-db                     | 1:M 09 Aug 2025 13:59:20.630 * <ReJSON> version: 80001 git sha: unknown branch: unknown
redis-db                     | 1:M 09 Aug 2025 13:59:20.630 * <ReJSON> Exported RedisJSON_V1 API
redis-db                     | 1:M 09 Aug 2025 13:59:20.630 * <ReJSON> Exported RedisJSON_V2 API
redis-db                     | 1:M 09 Aug 2025 13:59:20.630 * <ReJSON> Exported RedisJSON_V3 API
redis-db                     | 1:M 09 Aug 2025 13:59:20.630 * <ReJSON> Exported RedisJSON_V4 API
redis-db                     | 1:M 09 Aug 2025 13:59:20.630 * <ReJSON> Exported RedisJSON_V5 API
redis-db                     | 1:M 09 Aug 2025 13:59:20.630 * <ReJSON> Enabled diskless replication
redis-db                     | 1:M 09 Aug 2025 13:59:20.630 * <ReJSON> Initialized shared string cache, thread safe: false.
redis-db                     | 1:M 09 Aug 2025 13:59:20.630 * Module 'ReJSON' loaded from /usr/local/lib/redis/modules//rejson.so
redis-db                     | 1:M 09 Aug 2025 13:59:20.630 * <search> Acquired RedisJSON_V5 API
redis-db                     | 1:M 09 Aug 2025 13:59:20.630 * Server initialized
redis-db                     | 1:M 09 Aug 2025 13:59:20.630 * Ready to accept connections tcp
load-balancer-extreme-proxy  | {"time":"2025-08-09T13:59:21.701897386Z","level":"INFO","msg":"pre-warmed connections","backend":"http://go-backend-1:80","count":500}
load-balancer-extreme-proxy  | {"time":"2025-08-09T13:59:21.907716945Z","level":"INFO","msg":"pre-warmed connections","backend":"http://go-backend-2:80","count":500}
load-balancer-extreme-proxy  | {"time":"2025-08-09T13:59:21.907994639Z","level":"INFO","msg":"starting proxy server","address":":9999","backends":["http://go-backend-1:80","http://go-backend-2:80"]}
go-worker-1-1                | 2025/08/09 13:59:26 INFO length of the queue length=0
go-worker-1-1                | 2025/08/09 13:59:31 INFO length of the queue length=0
go-backend-1                 | 2025/08/09 13:59:31 ERROR failed to purge the api error="Post \"payment-processor-default:8080/admin/purge-payments\": unsupported protocol scheme \"payment-processor-default\"" url=payment-processor-default:8080/admin/purge-payments
go-worker-1-1                | 2025/08/09 13:59:36 INFO length of the queue length=42
go-worker-1-1                | 2025/08/09 13:59:41 INFO length of the queue length=81
go-worker-1-1                | 2025/08/09 13:59:46 INFO length of the queue length=20
go-worker-1-1                | 2025/08/09 13:59:51 INFO length of the queue length=11
go-worker-1-1                | 2025/08/09 13:59:56 INFO length of the queue length=998
go-worker-1-1                | 2025/08/09 14:00:01 INFO length of the queue length=2259
go-worker-1-1                | 2025/08/09 14:00:06 INFO length of the queue length=3763
go-worker-1-1                | 2025/08/09 14:00:11 INFO length of the queue length=5490
go-worker-1-1                | 2025/08/09 14:00:16 INFO length of the queue length=162
go-worker-1-1                | 2025/08/09 14:00:21 INFO length of the queue length=70
go-worker-1-1                | 2025/08/09 14:00:26 INFO length of the queue length=73
go-worker-1-1                | 2025/08/09 14:00:31 INFO length of the queue length=520
go-worker-1-1                | 2025/08/09 14:00:33 INFO shutting down worker
load-balancer-extreme-proxy  | {"time":"2025-08-09T14:00:33.063091558Z","level":"INFO","msg":"shutting down proxy server"}
[Kgo-worker-1-1 exited with code 0
[Kload-balancer-extreme-proxy exited with code 0
[Kgo-backend-2 exited with code 0
[Kgo-backend-1 exited with code 0
redis-db                     | 1:signal-handler (1754748034) Received SIGTERM scheduling shutdown...
redis-db                     | 1:M 09 Aug 2025 14:00:34.204 * User requested shutdown...
redis-db                     | 1:M 09 Aug 2025 14:00:34.204 # Redis is now ready to exit, bye bye...
[Kredis-db exited with code 0
log truncated at line 1000
