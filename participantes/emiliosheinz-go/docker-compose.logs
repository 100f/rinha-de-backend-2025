
 Network rinha  Creating
 Network rinha  Created
 Container redis  Creating
 Container postgres  Creating
 Container redis  Created
 Container postgres  Created
 Container api02  Creating
 Container api01  Creating
 Container api01  Created
 Container api02  Created
 Container nginx  Creating
 Container nginx  Created
Attaching to api01, api02, nginx, postgres, redis
postgres  | The files belonging to this database system will be owned by user "postgres".
postgres  | This user must also own the server process.
postgres  | 
postgres  | The database cluster will be initialized with locale "en_US.utf8".
postgres  | The default database encoding has accordingly been set to "UTF8".
postgres  | The default text search configuration will be set to "english".
postgres  | 
postgres  | Data page checksums are disabled.
postgres  | 
postgres  | fixing permissions on existing directory /var/lib/postgresql/data ... ok
postgres  | creating subdirectories ... ok
postgres  | selecting dynamic shared memory implementation ... posix
redis     | Starting Redis Server
redis     | 1:C 31 Jul 2025 10:43:56.917 # WARNING Memory overcommit must be enabled! Without it, a background save or replication may fail under low memory condition. Being disabled, it can also cause failures without low memory condition, see https://github.com/jemalloc/jemalloc/issues/1328. To fix this issue add 'vm.overcommit_memory = 1' to /etc/sysctl.conf and then reboot or run the command 'sysctl vm.overcommit_memory=1' for this to take effect.
postgres  | selecting default "max_connections" ... 100
redis     | 1:C 31 Jul 2025 10:43:57.002 * oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo
redis     | 1:C 31 Jul 2025 10:43:57.002 * Redis version=8.0.3, bits=64, commit=00000000, modified=1, pid=1, just started
redis     | 1:C 31 Jul 2025 10:43:57.002 * Configuration loaded
redis     | 1:M 31 Jul 2025 10:43:57.002 * monotonic clock: POSIX clock_gettime
redis     | 1:M 31 Jul 2025 10:43:57.003 * Running mode=standalone, port=6379.
redis     | 1:M 31 Jul 2025 10:43:57.004 * <bf> RedisBloom version 8.0.1 (Git=unknown)
redis     | 1:M 31 Jul 2025 10:43:57.004 * <bf> Registering configuration options: [
redis     | 1:M 31 Jul 2025 10:43:57.004 * <bf> 	{ bf-error-rate       :      0.01 }
redis     | 1:M 31 Jul 2025 10:43:57.004 * <bf> 	{ bf-initial-size     :       100 }
redis     | 1:M 31 Jul 2025 10:43:57.004 * <bf> 	{ bf-expansion-factor :         2 }
redis     | 1:M 31 Jul 2025 10:43:57.004 * <bf> 	{ cf-bucket-size      :         2 }
redis     | 1:M 31 Jul 2025 10:43:57.004 * <bf> 	{ cf-initial-size     :      1024 }
redis     | 1:M 31 Jul 2025 10:43:57.004 * <bf> 	{ cf-max-iterations   :        20 }
redis     | 1:M 31 Jul 2025 10:43:57.004 * <bf> 	{ cf-expansion-factor :         1 }
redis     | 1:M 31 Jul 2025 10:43:57.004 * <bf> 	{ cf-max-expansions   :        32 }
redis     | 1:M 31 Jul 2025 10:43:57.004 * <bf> ]
redis     | 1:M 31 Jul 2025 10:43:57.004 * Module 'bf' loaded from /usr/local/lib/redis/modules//redisbloom.so
redis     | 1:M 31 Jul 2025 10:43:57.007 * <search> Redis version found by RedisSearch : 8.0.3 - oss
redis     | 1:M 31 Jul 2025 10:43:57.007 * <search> RediSearch version 8.0.1 (Git=5688fcc)
redis     | 1:M 31 Jul 2025 10:43:57.007 * <search> Low level api version 1 initialized successfully
redis     | 1:M 31 Jul 2025 10:43:57.007 * <search> gc: ON, prefix min length: 2, min word length to stem: 4, prefix max expansions: 200, query timeout (ms): 500, timeout policy: return, cursor read size: 1000, cursor max idle (ms): 300000, max doctable size: 1000000, max number of search results:  1000000, 
redis     | 1:M 31 Jul 2025 10:43:57.007 * <search> Initialized thread pools!
redis     | 1:M 31 Jul 2025 10:43:57.007 * <search> Disabled workers threadpool of size 0
redis     | 1:M 31 Jul 2025 10:43:57.007 * <search> Subscribe to config changes
redis     | 1:M 31 Jul 2025 10:43:57.007 * <search> Enabled role change notification
redis     | 1:M 31 Jul 2025 10:43:57.007 * <search> Cluster configuration: AUTO partitions, type: 0, coordinator timeout: 0ms
redis     | 1:M 31 Jul 2025 10:43:57.007 * <search> Register write commands
redis     | 1:M 31 Jul 2025 10:43:57.008 * Module 'search' loaded from /usr/local/lib/redis/modules//redisearch.so
redis     | 1:M 31 Jul 2025 10:43:57.008 * <timeseries> RedisTimeSeries version 80001, git_sha=577bfa8b5909e7ee572f0b651399be8303dc6641
redis     | 1:M 31 Jul 2025 10:43:57.008 * <timeseries> Redis version found by RedisTimeSeries : 8.0.3 - oss
redis     | 1:M 31 Jul 2025 10:43:57.008 * <timeseries> Registering configuration options: [
redis     | 1:M 31 Jul 2025 10:43:57.008 * <timeseries> 	{ ts-compaction-policy   :              }
redis     | 1:M 31 Jul 2025 10:43:57.008 * <timeseries> 	{ ts-num-threads         :            3 }
redis     | 1:M 31 Jul 2025 10:43:57.009 * <timeseries> 	{ ts-retention-policy    :            0 }
redis     | 1:M 31 Jul 2025 10:43:57.009 * <timeseries> 	{ ts-duplicate-policy    :        block }
redis     | 1:M 31 Jul 2025 10:43:57.009 * <timeseries> 	{ ts-chunk-size-bytes    :         4096 }
redis     | 1:M 31 Jul 2025 10:43:57.009 * <timeseries> 	{ ts-encoding            :   compressed }
redis     | 1:M 31 Jul 2025 10:43:57.009 * <timeseries> 	{ ts-ignore-max-time-diff:            0 }
redis     | 1:M 31 Jul 2025 10:43:57.009 * <timeseries> 	{ ts-ignore-max-val-diff :     0.000000 }
redis     | 1:M 31 Jul 2025 10:43:57.009 * <timeseries> ]
redis     | 1:M 31 Jul 2025 10:43:57.009 * <timeseries> Detected redis oss
redis     | 1:M 31 Jul 2025 10:43:57.009 * Module 'timeseries' loaded from /usr/local/lib/redis/modules//redistimeseries.so
redis     | 1:M 31 Jul 2025 10:43:57.011 * <ReJSON> Created new data type 'ReJSON-RL'
redis     | 1:M 31 Jul 2025 10:43:57.011 * <ReJSON> version: 80001 git sha: unknown branch: unknown
redis     | 1:M 31 Jul 2025 10:43:57.011 * <ReJSON> Exported RedisJSON_V1 API
redis     | 1:M 31 Jul 2025 10:43:57.011 * <ReJSON> Exported RedisJSON_V2 API
redis     | 1:M 31 Jul 2025 10:43:57.011 * <ReJSON> Exported RedisJSON_V3 API
redis     | 1:M 31 Jul 2025 10:43:57.011 * <ReJSON> Exported RedisJSON_V4 API
redis     | 1:M 31 Jul 2025 10:43:57.011 * <ReJSON> Exported RedisJSON_V5 API
redis     | 1:M 31 Jul 2025 10:43:57.011 * <ReJSON> Enabled diskless replication
redis     | 1:M 31 Jul 2025 10:43:57.011 * <ReJSON> Initialized shared string cache, thread safe: false.
redis     | 1:M 31 Jul 2025 10:43:57.011 * Module 'ReJSON' loaded from /usr/local/lib/redis/modules//rejson.so
redis     | 1:M 31 Jul 2025 10:43:57.011 * <search> Acquired RedisJSON_V5 API
redis     | 1:M 31 Jul 2025 10:43:57.011 * Server initialized
redis     | 1:M 31 Jul 2025 10:43:57.011 * Ready to accept connections tcp
postgres  | selecting default "shared_buffers" ... 128MB
postgres  | selecting default time zone ... UTC
postgres  | creating configuration files ... ok
postgres  | running bootstrap script ... ok
postgres  | sh: locale: not found
postgres  | 2025-07-31 10:43:59.614 UTC [36] WARNING:  no usable system locales were found
postgres  | performing post-bootstrap initialization ... ok
postgres  | initdb: warning: enabling "trust" authentication for local connections
postgres  | initdb: hint: You can change this by editing pg_hba.conf or using the option -A, or --auth-local and --auth-host, the next time you run initdb.
postgres  | syncing data to disk ... ok
postgres  | 
postgres  | 
postgres  | Success. You can now start the database server using:
postgres  | 
postgres  |     pg_ctl -D /var/lib/postgresql/data -l logfile start
postgres  | 
postgres  | waiting for server to start....2025-07-31 10:44:03.911 UTC [59] LOG:  starting PostgreSQL 17.5 on x86_64-pc-linux-musl, compiled by gcc (Alpine 14.2.0) 14.2.0, 64-bit
postgres  | 2025-07-31 10:44:03.916 UTC [59] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
postgres  | 2025-07-31 10:44:03.933 UTC [62] LOG:  database system was shut down at 2025-07-31 10:44:03 UTC
postgres  | 2025-07-31 10:44:03.956 UTC [59] LOG:  database system is ready to accept connections
postgres  |  done
postgres  | server started
postgres  | CREATE DATABASE
postgres  | 
postgres  | 
postgres  | /usr/local/bin/docker-entrypoint.sh: running /docker-entrypoint-initdb.d/script.sql
postgres  | psql:/docker-entrypoint-initdb.d/script.sql:1: NOTICE:  table "payments" does not exist, skipping
postgres  | DROP TABLE
postgres  | CREATE TYPE
postgres  | CREATE TABLE
postgres  | CREATE INDEX
postgres  | CREATE INDEX
postgres  | CREATE INDEX
postgres  | 
postgres  | 
postgres  | waiting for server to shut down....2025-07-31 10:44:04.617 UTC [59] LOG:  received fast shutdown request
postgres  | 2025-07-31 10:44:04.622 UTC [59] LOG:  aborting any active transactions
postgres  | 2025-07-31 10:44:04.627 UTC [59] LOG:  background worker "logical replication launcher" (PID 65) exited with exit code 1
postgres  | 2025-07-31 10:44:04.702 UTC [60] LOG:  shutting down
postgres  | 2025-07-31 10:44:04.707 UTC [60] LOG:  checkpoint starting: shutdown immediate
postgres  | 2025-07-31 10:44:04.850 UTC [60] LOG:  checkpoint complete: wrote 937 buffers (5.7%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.026 s, sync=0.092 s, total=0.149 s; sync files=309, longest=0.048 s, average=0.001 s; distance=4289 kB, estimate=4289 kB; lsn=0/191D740, redo lsn=0/191D740
postgres  | 2025-07-31 10:44:04.860 UTC [59] LOG:  database system is shut down
postgres  |  done
postgres  | server stopped
postgres  | 
postgres  | PostgreSQL init process complete; ready for start up.
postgres  | 
postgres  | 2025-07-31 10:44:05.010 UTC [1] LOG:  starting PostgreSQL 17.5 on x86_64-pc-linux-musl, compiled by gcc (Alpine 14.2.0) 14.2.0, 64-bit
postgres  | 2025-07-31 10:44:05.010 UTC [1] LOG:  listening on IPv4 address "0.0.0.0", port 5432
postgres  | 2025-07-31 10:44:05.010 UTC [1] LOG:  listening on IPv6 address "::", port 5432
postgres  | 2025-07-31 10:44:05.020 UTC [1] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
postgres  | 2025-07-31 10:44:05.037 UTC [77] LOG:  database system was shut down at 2025-07-31 10:44:04 UTC
postgres  | 2025-07-31 10:44:05.102 UTC [1] LOG:  database system is ready to accept connections
api01     | 2025/07/31 10:44:06 Configuration initialized successfully
api02     | 2025/07/31 10:44:06 Configuration initialized successfully
api02     | Database connection established successfully
api02     | 2025/07/31 10:44:06 Default health status initialized for default: &{Failing:false MinResponseTime:0}
api02     | 2025/07/31 10:44:06 Default health status initialized for fallback: &{Failing:false MinResponseTime:0}
api01     | Database connection established successfully
api02     | asynq: pid=1 2025/07/31 10:44:06.305127 INFO: Starting processing
api02     | asynq: pid=1 2025/07/31 10:44:06.305152 INFO: Send signal TSTP to stop processing new tasks
api02     | asynq: pid=1 2025/07/31 10:44:06.305155 INFO: Send signal TERM or INT to terminate the process
api01     | asynq: pid=1 2025/07/31 10:44:06.306126 INFO: Starting processing
api01     | asynq: pid=1 2025/07/31 10:44:06.306143 INFO: Send signal TSTP to stop processing new tasks
api01     | asynq: pid=1 2025/07/31 10:44:06.306147 INFO: Send signal TERM or INT to terminate the process
nginx     | /docker-entrypoint.sh: /docker-entrypoint.d/ is not empty, will attempt to perform configuration
nginx     | /docker-entrypoint.sh: Looking for shell scripts in /docker-entrypoint.d/
nginx     | /docker-entrypoint.sh: Launching /docker-entrypoint.d/10-listen-on-ipv6-by-default.sh
nginx     | 10-listen-on-ipv6-by-default.sh: info: Getting the checksum of /etc/nginx/conf.d/default.conf
nginx     | 10-listen-on-ipv6-by-default.sh: info: Enabled listen on IPv6 in /etc/nginx/conf.d/default.conf
nginx     | /docker-entrypoint.sh: Sourcing /docker-entrypoint.d/15-local-resolvers.envsh
nginx     | /docker-entrypoint.sh: Launching /docker-entrypoint.d/20-envsubst-on-templates.sh
nginx     | /docker-entrypoint.sh: Launching /docker-entrypoint.d/30-tune-worker-processes.sh
nginx     | /docker-entrypoint.sh: Configuration complete; ready for start up
api02     | 2025/07/31 10:44:16 Acting as leader. Ensuring health checks are running.
api01     | 2025/07/31 10:44:16 Not the leader.
api02     | 2025/07/31 10:44:21 Health check for default OK: {Failing:false MinResponseTime:0}
api02     | 2025/07/31 10:44:21 Health check for fallback OK: {Failing:false MinResponseTime:0}
api02     | 2025/07/31 10:44:26 Acting as leader. Ensuring health checks are running.
api01     | 2025/07/31 10:44:26 Not the leader.
api02     | 2025/07/31 10:44:26 Health check for default OK: {Failing:false MinResponseTime:0}
api02     | 2025/07/31 10:44:26 Health check for fallback OK: {Failing:false MinResponseTime:0}
api02     | 2025/07/31 10:44:31 Health check for default OK: {Failing:false MinResponseTime:100}
api02     | 2025/07/31 10:44:31 Health check for fallback OK: {Failing:false MinResponseTime:0}
api02     | 2025/07/31 10:44:36 Acting as leader. Ensuring health checks are running.
api01     | 2025/07/31 10:44:36 Not the leader.
api02     | 2025/07/31 10:44:36 Health check for fallback OK: {Failing:false MinResponseTime:0}
api02     | 2025/07/31 10:44:36 Health check for default OK: {Failing:false MinResponseTime:100}
api02     | 2025/07/31 10:44:41 Health check for default OK: {Failing:true MinResponseTime:100}
api02     | 2025/07/31 10:44:41 Health check for fallback OK: {Failing:false MinResponseTime:0}
api02     | 2025/07/31 10:44:46 Acting as leader. Ensuring health checks are running.
api01     | 2025/07/31 10:44:46 Not the leader.
api02     | 2025/07/31 10:44:46 Health check for default OK: {Failing:true MinResponseTime:100}
api02     | 2025/07/31 10:44:46 Health check for fallback OK: {Failing:false MinResponseTime:0}
api02     | 2025/07/31 10:44:51 ❌ Setting fallback as failing
api02     | 2025/07/31 10:44:51 ❌ Setting fallback as failing
api02     | 2025/07/31 10:44:51 ❌ Setting fallback as failing
api02     | 2025/07/31 10:44:51 ❌ Setting fallback as failing
api02     | 2025/07/31 10:44:51 ❌ Setting fallback as failing
api02     | 2025/07/31 10:44:51 ❌ Setting fallback as failing
api02     | 2025/07/31 10:44:51 ❌ Setting fallback as failing
api02     | 2025/07/31 10:44:51 ❌ Setting fallback as failing
api02     | 2025/07/31 10:44:51 ❌ Setting fallback as failing
api02     | 2025/07/31 10:44:51 ❌ Setting fallback as failing
api02     | 2025/07/31 10:44:51 ❌ Setting fallback as failing
api02     | 2025/07/31 10:44:51 ❌ Setting fallback as failing
api02     | 2025/07/31 10:44:51 ❌ Setting fallback as failing
api02     | 2025/07/31 10:44:51 ❌ Setting fallback as failing
api02     | 2025/07/31 10:44:51 ❌ Setting fallback as failing
api02     | 2025/07/31 10:44:51 ❌ Setting fallback as failing
api02     | 2025/07/31 10:44:51 ❌ Setting fallback as failing
api02     | 2025/07/31 10:44:51 ❌ Setting fallback as failing
api02     | 2025/07/31 10:44:51 ❌ Setting fallback as failing
api02     | 2025/07/31 10:44:51 ❌ Setting fallback as failing
api02     | 2025/07/31 10:44:51 ❌ Setting fallback as failing
api02     | 2025/07/31 10:44:51 ❌ Setting fallback as failing
api02     | 2025/07/31 10:44:51 ❌ Setting fallback as failing
api02     | 2025/07/31 10:44:51 ❌ Setting fallback as failing
api02     | 2025/07/31 10:44:51 ❌ Setting fallback as failing
api02     | 2025/07/31 10:44:51 ❌ Setting fallback as failing
api02     | 2025/07/31 10:44:51 ❌ Setting fallback as failing
api02     | 2025/07/31 10:44:51 ❌ Setting fallback as failing
api02     | 2025/07/31 10:44:51 ❌ Setting fallback as failing
api02     | 2025/07/31 10:44:51 ❌ Setting fallback as failing
api02     | 2025/07/31 10:44:51 ❌ Setting fallback as failing
api02     | 2025/07/31 10:44:51 ❌ Setting fallback as failing
api02     | 2025/07/31 10:44:51 Health check for default OK: {Failing:true MinResponseTime:2000}
api02     | 2025/07/31 10:44:51 Health check for fallback OK: {Failing:true MinResponseTime:1000}
api02     | 2025/07/31 10:44:56 Acting as leader. Ensuring health checks are running.
api01     | 2025/07/31 10:44:56 Not the leader.
api02     | 2025/07/31 10:44:56 Health check for default OK: {Failing:true MinResponseTime:2000}
api02     | 2025/07/31 10:44:56 Health check for fallback OK: {Failing:true MinResponseTime:1000}
api01     | 2025/07/31 10:45:01 ✅ Setting default as succeeding
api02     | 2025/07/31 10:45:01 Health check for default OK: {Failing:false MinResponseTime:20}
api02     | 2025/07/31 10:45:01 Health check for fallback OK: {Failing:false MinResponseTime:20}
api01     | 2025/07/31 10:45:06 Not the leader.
api02     | 2025/07/31 10:45:06 Acting as leader. Ensuring health checks are running.
api02     | 2025/07/31 10:45:06 Health check for default OK: {Failing:false MinResponseTime:20}
api02     | 2025/07/31 10:45:06 Health check for fallback OK: {Failing:false MinResponseTime:20}
api02     | 2025/07/31 10:45:11 Health check for default OK: {Failing:false MinResponseTime:0}
api02     | 2025/07/31 10:45:11 Health check for fallback OK: {Failing:false MinResponseTime:5000}
api02     | asynq: pid=1 2025/07/31 10:45:16.105018 WARN: Could not remove task id=a21e1695-8b7c-47b2-b784-9856a74cf3a5 type="payment:process" from "asynq:{default}:active" err: INTERNAL_ERROR: redis eval error: NOT FOUND; Will retry syncing
api02     | asynq: pid=1 2025/07/31 10:45:16.105160 WARN: Could not remove task id=910a6ce7-4ea5-47d9-bfbd-a709a8549d54 type="payment:process" from "asynq:{default}:active" err: INTERNAL_ERROR: redis eval error: NOT FOUND; Will retry syncing
api01     | asynq: pid=1 2025/07/31 10:45:16.105722 WARN: Could not remove task id=6d77cc75-b6c9-4a6c-8c3b-0f714c9ef88d type="payment:process" from "asynq:{default}:active" err: INTERNAL_ERROR: redis eval error: NOT FOUND; Will retry syncing
api01     | 2025/07/31 10:45:16 Not the leader.
api02     | 2025/07/31 10:45:16 Acting as leader. Ensuring health checks are running.
api02     | 2025/07/31 10:45:16 Health check for fallback OK: {Failing:false MinResponseTime:5000}
api02     | 2025/07/31 10:45:16 Health check for default OK: {Failing:false MinResponseTime:0}
api02     | asynq: pid=1 2025/07/31 10:45:18.504623 WARN: Could not remove task id=2e27d4ad-754d-45e3-bb65-6190e2b4ad8b type="payment:process" from "asynq:{default}:active" err: INTERNAL_ERROR: redis eval error: NOT FOUND; Will retry syncing
api02     | asynq: pid=1 2025/07/31 10:45:18.506826 WARN: Could not remove task id=37a8c9a4-3eb3-4e39-9469-ac0c3774fc8e type="payment:process" from "asynq:{default}:active" err: INTERNAL_ERROR: redis eval error: NOT FOUND; Will retry syncing
api02     | asynq: pid=1 2025/07/31 10:45:18.506921 WARN: Could not remove task id=ff5fce96-24f3-4f9e-8dca-dee0518a92ad type="payment:process" from "asynq:{default}:active" err: INTERNAL_ERROR: redis eval error: NOT FOUND; Will retry syncing
api02     | asynq: pid=1 2025/07/31 10:45:18.506986 WARN: Could not remove task id=64198a7c-71b3-470e-b05d-9c2d9cad7241 type="payment:process" from "asynq:{default}:active" err: INTERNAL_ERROR: redis eval error: NOT FOUND; Will retry syncing
api02     | asynq: pid=1 2025/07/31 10:45:18.507425 WARN: Could not remove task id=1935c809-3f9c-42c3-8f08-2410dce4f523 type="payment:process" from "asynq:{default}:active" err: INTERNAL_ERROR: redis eval error: NOT FOUND; Will retry syncing
api02     | 2025/07/31 10:45:22 Health check for default OK: {Failing:false MinResponseTime:0}
api02     | 2025/07/31 10:45:22 Health check for fallback OK: {Failing:false MinResponseTime:5000}
[Knginx exited with code 0
api02     | asynq: pid=1 2025/07/31 10:45:23.054451 INFO: Stopping processor
api01     | asynq: pid=1 2025/07/31 10:45:23.060166 INFO: Stopping processor
api02     | asynq: pid=1 2025/07/31 10:45:23.104230 INFO: Processor stopped
api02     | asynq: pid=1 2025/07/31 10:45:23.104348 INFO: Starting graceful shutdown
api02     | asynq: pid=1 2025/07/31 10:45:23.104357 INFO: Waiting for all workers to finish...
api01     | asynq: pid=1 2025/07/31 10:45:23.102477 INFO: Processor stopped
api01     | asynq: pid=1 2025/07/31 10:45:23.102491 INFO: Starting graceful shutdown
api01     | asynq: pid=1 2025/07/31 10:45:23.102497 INFO: Waiting for all workers to finish...
api01     | asynq: pid=1 2025/07/31 10:45:23.120868 INFO: All workers have finished
api01     | asynq: pid=1 2025/07/31 10:45:23.120935 ERROR: Could not remove task id=6d77cc75-b6c9-4a6c-8c3b-0f714c9ef88d type="payment:process" from "asynq:{default}:active" err: INTERNAL_ERROR: redis eval error: NOT FOUND
api02     | asynq: pid=1 2025/07/31 10:45:23.121224 INFO: All workers have finished
api02     | asynq: pid=1 2025/07/31 10:45:23.121278 ERROR: Could not remove task id=a21e1695-8b7c-47b2-b784-9856a74cf3a5 type="payment:process" from "asynq:{default}:active" err: INTERNAL_ERROR: redis eval error: NOT FOUND
api02     | asynq: pid=1 2025/07/31 10:45:23.121285 ERROR: Could not remove task id=910a6ce7-4ea5-47d9-bfbd-a709a8549d54 type="payment:process" from "asynq:{default}:active" err: INTERNAL_ERROR: redis eval error: NOT FOUND
api02     | asynq: pid=1 2025/07/31 10:45:23.121288 ERROR: Could not remove task id=2e27d4ad-754d-45e3-bb65-6190e2b4ad8b type="payment:process" from "asynq:{default}:active" err: INTERNAL_ERROR: redis eval error: NOT FOUND
api02     | asynq: pid=1 2025/07/31 10:45:23.121292 ERROR: Could not remove task id=37a8c9a4-3eb3-4e39-9469-ac0c3774fc8e type="payment:process" from "asynq:{default}:active" err: INTERNAL_ERROR: redis eval error: NOT FOUND
api02     | asynq: pid=1 2025/07/31 10:45:23.121295 ERROR: Could not remove task id=ff5fce96-24f3-4f9e-8dca-dee0518a92ad type="payment:process" from "asynq:{default}:active" err: INTERNAL_ERROR: redis eval error: NOT FOUND
api02     | asynq: pid=1 2025/07/31 10:45:23.121299 ERROR: Could not remove task id=64198a7c-71b3-470e-b05d-9c2d9cad7241 type="payment:process" from "asynq:{default}:active" err: INTERNAL_ERROR: redis eval error: NOT FOUND
api02     | asynq: pid=1 2025/07/31 10:45:23.121302 ERROR: Could not remove task id=1935c809-3f9c-42c3-8f08-2410dce4f523 type="payment:process" from "asynq:{default}:active" err: INTERNAL_ERROR: redis eval error: NOT FOUND
api01     | asynq: pid=1 2025/07/31 10:45:23.121652 INFO: Exiting
api02     | asynq: pid=1 2025/07/31 10:45:23.121814 INFO: Exiting
api02     | 2025/07/31 10:45:26 Acting as leader. Ensuring health checks are running.
api01     | 2025/07/31 10:45:26 Not the leader.
api02     | 2025/07/31 10:45:27 Health check for default OK: {Failing:false MinResponseTime:0}
api02     | 2025/07/31 10:45:27 Health check for fallback OK: {Failing:false MinResponseTime:5000}
api02     | 2025/07/31 10:45:32 Health check for default OK: {Failing:false MinResponseTime:0}
api02     | 2025/07/31 10:45:32 Health check for fallback OK: {Failing:false MinResponseTime:5000}
[Kapi02 exited with code 137
redis     | 1:signal-handler (1753958733) Received SIGTERM scheduling shutdown...
redis     | 1:M 31 Jul 2025 10:45:33.866 * User requested shutdown...
redis     | 1:M 31 Jul 2025 10:45:33.866 # Redis is now ready to exit, bye bye...
postgres  | 2025-07-31 10:45:33.904 UTC [1] LOG:  received fast shutdown request
postgres  | 2025-07-31 10:45:33.912 UTC [1] LOG:  aborting any active transactions
postgres  | 2025-07-31 10:45:34.005 UTC [1] LOG:  background worker "logical replication launcher" (PID 80) exited with exit code 1
postgres  | 2025-07-31 10:45:34.103 UTC [75] LOG:  shutting down
postgres  | 2025-07-31 10:45:34.120 UTC [75] LOG:  checkpoint starting: shutdown immediate
[Kredis exited with code 0
postgres  | 2025-07-31 10:45:34.291 UTC [75] LOG:  checkpoint complete: wrote 381 buffers (2.3%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.032 s, sync=0.042 s, total=0.189 s; sync files=30, longest=0.039 s, average=0.002 s; distance=5780 kB, estimate=5780 kB; lsn=0/1EC2A98, redo lsn=0/1EC2A98
postgres  | 2025-07-31 10:45:34.299 UTC [1] LOG:  database system is shut down
[Kpostgres exited with code 0
log truncated at line 1000
