user www-data;
worker_processes auto;

events {
   use epoll;
   worker_connections 120;
}

http {
   error_log /dev/null crit;
   access_log off;

   lua_shared_dict shared_data 1m;

   upstream api {
       server unix:/tmp/api1.sock;
       server unix:/tmp/api2.sock;
   }

   upstream api1 {
       server unix:/tmp/api1.sock;
   }

   upstream api2 {
       server unix:/tmp/api2.sock;
   }

   server {
       listen 9999;

       location /api1/ {
           rewrite ^/api1/(.*)$ /$1 break;
           proxy_pass http://api1;
           proxy_http_version 1.1;
           proxy_set_header Connection "";
       }

       location /api2/ {
           rewrite ^/api2/(.*)$ /$1 break;
           proxy_pass http://api2;
           proxy_http_version 1.1;
           proxy_set_header Connection "";
       }

       location = /payments {
           content_by_lua_block {
               ngx.req.read_body()
               local data = ngx.req.get_body_data()

               ngx.status = 200
               ngx.flush(true)

               ngx.timer.at(0, function()
                   local counter = ngx.shared.shared_data:incr("rr_counter", 1, 0)
                   local selected = counter % 2 == 0 and "unix:/tmp/api1.sock" or "unix:/tmp/api2.sock"
                   local sock = ngx.socket.tcp()
                   sock:settimeout(50)
                   sock:connect(selected)
                   sock:send("POST /payments HTTP/1.1\r\nContent-Type: application/json\r\nContent-Length: " .. #data .. "\r\nConnection: close\r\n\r\n")
                   sock:send(data)
                   sock:close()
               end)
           }
       }

       location / {
           proxy_pass http://api;
           proxy_http_version 1.1;
           proxy_set_header Connection "";
       }
   }
}