
 Network flads-go_main-network  Creating
 Network flads-go_main-network  Created
 Volume "flads-go_sockets"  Creating
 Volume "flads-go_sockets"  Created
 Container flads-go-redis-1  Creating
 Container api-2  Creating
 Container api-1  Creating
 Container api-1  Created
 Container flads-go-redis-1  Created
 Container worker-1  Creating
 Container worker-2  Creating
 Container api-2  Created
 Container flads-go-haproxy-1  Creating
 Container flads-go-haproxy-1  Created
 Container worker-1  Created
 Container worker-2  Created
Attaching to api-1, api-2, haproxy-1, redis-1, worker-1, worker-2
redis-1    | Starting Redis Server
api-2      | [GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.
api-2      | 
api-2      | [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
api-2      |  - using env:	export GIN_MODE=release
api-2      |  - using code:	gin.SetMode(gin.ReleaseMode)
api-2      | 
api-2      | [GIN-debug] POST   /payments                 --> src/app.(*App).ListenAndServe.func1 (3 handlers)
api-2      | [GIN-debug] GET    /payments-summary         --> src/app.(*App).ListenAndServe.func2 (3 handlers)
redis-1    | 1:C 05 Aug 2025 12:07:16.127 # WARNING Memory overcommit must be enabled! Without it, a background save or replication may fail under low memory condition. Being disabled, it can also cause failures without low memory condition, see https://github.com/jemalloc/jemalloc/issues/1328. To fix this issue add 'vm.overcommit_memory = 1' to /etc/sysctl.conf and then reboot or run the command 'sysctl vm.overcommit_memory=1' for this to take effect.
redis-1    | 1:C 05 Aug 2025 12:07:16.127 * oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo
redis-1    | 1:C 05 Aug 2025 12:07:16.127 * Redis version=8.0.3, bits=64, commit=00000000, modified=1, pid=1, just started
redis-1    | 1:C 05 Aug 2025 12:07:16.127 * Configuration loaded
redis-1    | 1:M 05 Aug 2025 12:07:16.127 * monotonic clock: POSIX clock_gettime
redis-1    | 1:M 05 Aug 2025 12:07:16.128 * Running mode=standalone, port=6379.
redis-1    | 1:M 05 Aug 2025 12:07:16.129 * <bf> RedisBloom version 8.0.1 (Git=unknown)
redis-1    | 1:M 05 Aug 2025 12:07:16.129 * <bf> Registering configuration options: [
redis-1    | 1:M 05 Aug 2025 12:07:16.129 * <bf> 	{ bf-error-rate       :      0.01 }
redis-1    | 1:M 05 Aug 2025 12:07:16.129 * <bf> 	{ bf-initial-size     :       100 }
redis-1    | 1:M 05 Aug 2025 12:07:16.129 * <bf> 	{ bf-expansion-factor :         2 }
redis-1    | 1:M 05 Aug 2025 12:07:16.130 * <bf> 	{ cf-bucket-size      :         2 }
redis-1    | 1:M 05 Aug 2025 12:07:16.130 * <bf> 	{ cf-initial-size     :      1024 }
redis-1    | 1:M 05 Aug 2025 12:07:16.130 * <bf> 	{ cf-max-iterations   :        20 }
redis-1    | 1:M 05 Aug 2025 12:07:16.130 * <bf> 	{ cf-expansion-factor :         1 }
redis-1    | 1:M 05 Aug 2025 12:07:16.130 * <bf> 	{ cf-max-expansions   :        32 }
redis-1    | 1:M 05 Aug 2025 12:07:16.130 * <bf> ]
redis-1    | 1:M 05 Aug 2025 12:07:16.130 * Module 'bf' loaded from /usr/local/lib/redis/modules//redisbloom.so
redis-1    | 1:M 05 Aug 2025 12:07:16.141 * <search> Redis version found by RedisSearch : 8.0.3 - oss
redis-1    | 1:M 05 Aug 2025 12:07:16.141 * <search> RediSearch version 8.0.1 (Git=5688fcc)
redis-1    | 1:M 05 Aug 2025 12:07:16.141 * <search> Low level api version 1 initialized successfully
redis-1    | 1:M 05 Aug 2025 12:07:16.141 * <search> gc: ON, prefix min length: 2, min word length to stem: 4, prefix max expansions: 200, query timeout (ms): 500, timeout policy: return, cursor read size: 1000, cursor max idle (ms): 300000, max doctable size: 1000000, max number of search results:  1000000, 
redis-1    | 1:M 05 Aug 2025 12:07:16.141 * <search> Initialized thread pools!
redis-1    | 1:M 05 Aug 2025 12:07:16.141 * <search> Disabled workers threadpool of size 0
redis-1    | 1:M 05 Aug 2025 12:07:16.141 * <search> Subscribe to config changes
redis-1    | 1:M 05 Aug 2025 12:07:16.141 * <search> Enabled role change notification
redis-1    | 1:M 05 Aug 2025 12:07:16.141 * <search> Cluster configuration: AUTO partitions, type: 0, coordinator timeout: 0ms
redis-1    | 1:M 05 Aug 2025 12:07:16.141 * <search> Register write commands
redis-1    | 1:M 05 Aug 2025 12:07:16.142 * Module 'search' loaded from /usr/local/lib/redis/modules//redisearch.so
redis-1    | 1:M 05 Aug 2025 12:07:16.142 * <timeseries> RedisTimeSeries version 80001, git_sha=577bfa8b5909e7ee572f0b651399be8303dc6641
redis-1    | 1:M 05 Aug 2025 12:07:16.142 * <timeseries> Redis version found by RedisTimeSeries : 8.0.3 - oss
redis-1    | 1:M 05 Aug 2025 12:07:16.142 * <timeseries> Registering configuration options: [
redis-1    | 1:M 05 Aug 2025 12:07:16.143 * <timeseries> 	{ ts-compaction-policy   :              }
redis-1    | 1:M 05 Aug 2025 12:07:16.143 * <timeseries> 	{ ts-num-threads         :            3 }
redis-1    | 1:M 05 Aug 2025 12:07:16.143 * <timeseries> 	{ ts-retention-policy    :            0 }
redis-1    | 1:M 05 Aug 2025 12:07:16.143 * <timeseries> 	{ ts-duplicate-policy    :        block }
redis-1    | 1:M 05 Aug 2025 12:07:16.143 * <timeseries> 	{ ts-chunk-size-bytes    :         4096 }
redis-1    | 1:M 05 Aug 2025 12:07:16.143 * <timeseries> 	{ ts-encoding            :   compressed }
redis-1    | 1:M 05 Aug 2025 12:07:16.143 * <timeseries> 	{ ts-ignore-max-time-diff:            0 }
redis-1    | 1:M 05 Aug 2025 12:07:16.143 * <timeseries> 	{ ts-ignore-max-val-diff :     0.000000 }
redis-1    | 1:M 05 Aug 2025 12:07:16.143 * <timeseries> ]
redis-1    | 1:M 05 Aug 2025 12:07:16.143 * <timeseries> Detected redis oss
redis-1    | 1:M 05 Aug 2025 12:07:16.143 * Module 'timeseries' loaded from /usr/local/lib/redis/modules//redistimeseries.so
redis-1    | 1:M 05 Aug 2025 12:07:16.151 * <ReJSON> Created new data type 'ReJSON-RL'
redis-1    | 1:M 05 Aug 2025 12:07:16.151 * <ReJSON> version: 80001 git sha: unknown branch: unknown
redis-1    | 1:M 05 Aug 2025 12:07:16.151 * <ReJSON> Exported RedisJSON_V1 API
redis-1    | 1:M 05 Aug 2025 12:07:16.151 * <ReJSON> Exported RedisJSON_V2 API
redis-1    | 1:M 05 Aug 2025 12:07:16.151 * <ReJSON> Exported RedisJSON_V3 API
redis-1    | 1:M 05 Aug 2025 12:07:16.151 * <ReJSON> Exported RedisJSON_V4 API
redis-1    | 1:M 05 Aug 2025 12:07:16.151 * <ReJSON> Exported RedisJSON_V5 API
redis-1    | 1:M 05 Aug 2025 12:07:16.151 * <ReJSON> Enabled diskless replication
redis-1    | 1:M 05 Aug 2025 12:07:16.151 * <ReJSON> Initialized shared string cache, thread safe: false.
redis-1    | 1:M 05 Aug 2025 12:07:16.151 * Module 'ReJSON' loaded from /usr/local/lib/redis/modules//rejson.so
redis-1    | 1:M 05 Aug 2025 12:07:16.151 * <search> Acquired RedisJSON_V5 API
redis-1    | 1:M 05 Aug 2025 12:07:16.152 * Server initialized
redis-1    | 1:M 05 Aug 2025 12:07:16.152 * Ready to accept connections tcp
api-1      | [GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.
api-1      | 
api-1      | [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
api-1      |  - using env:	export GIN_MODE=release
api-1      |  - using code:	gin.SetMode(gin.ReleaseMode)
api-1      | 
api-1      | [GIN-debug] POST   /payments                 --> src/app.(*App).ListenAndServe.func1 (3 handlers)
api-1      | [GIN-debug] GET    /payments-summary         --> src/app.(*App).ListenAndServe.func2 (3 handlers)
haproxy-1  | HAProxy version 3.2.3-1844da7 2025/07/09 - https://haproxy.org/
haproxy-1  | Status: long-term supported branch - will stop receiving fixes around Q2 2030.
haproxy-1  | Known bugs: http://www.haproxy.org/bugs/bugs-3.2.3.html
haproxy-1  | Running on: Linux 6.1.0-37-amd64 #1 SMP PREEMPT_DYNAMIC Debian 6.1.140-1 (2025-05-22) x86_64
haproxy-1  | Usage : haproxy [-f <cfgfile|cfgdir>]* [ -vdVD ] [ -n <maxconn> ] [ -N <maxpconn> ]
haproxy-1  |         [ -p <pidfile> ] [ -m <max megs> ] [ -C <dir> ] [-- <cfgfile>*]
haproxy-1  |         -v displays version ; -vv shows known build options.
haproxy-1  |         -d enters debug mode ; -db only disables background mode.
haproxy-1  |         -dM[<byte>,help,...] debug memory (default: poison with <byte>/0x50)
haproxy-1  |         -dt activate traces on stderr
haproxy-1  |         -V enters verbose mode (disables quiet mode)
haproxy-1  |         -D goes daemon ; -C changes to <dir> before loading files.
haproxy-1  |         -W master-worker mode.
haproxy-1  |         -Ws master-worker mode with systemd notify support.
haproxy-1  |         -q quiet mode : don't display messages
haproxy-1  |         -c check mode : only check config files and exit
haproxy-1  |         -cc check condition : evaluate a condition and exit
haproxy-1  |         -4 force resolvers to consider IPv4 responses only
haproxy-1  |         -n sets the maximum total # of connections (uses ulimit -n)
haproxy-1  |         -m limits the usable amount of memory (in MB)
haproxy-1  |         -N sets the default, per-proxy maximum # of connections (0)
haproxy-1  |         -L set local peer name (default to hostname)
haproxy-1  |         -p writes pids of all children to this file
haproxy-1  |         -dC[[key],line] display the configuration file, if there is a key, the file will be anonymised
haproxy-1  |         -de disables epoll() usage even when available
haproxy-1  |         -dp disables poll() usage even when available
haproxy-1  |         -dS disables splice usage (broken on old kernels)
haproxy-1  |         -dG disables getaddrinfo() usage
haproxy-1  |         -dR disables SO_REUSEPORT usage
haproxy-1  |         -dc dumps the list of selected and evicted CPUs
haproxy-1  |         -dK{class[,...]} dump registered keywords (use 'help' for list)
haproxy-1  |         -dr ignores server address resolution failures
haproxy-1  |         -dV disables SSL verify on servers side
haproxy-1  |         -dW fails if any warning is emitted
haproxy-1  |         -dD diagnostic mode : warn about suspicious configuration statements
haproxy-1  |         -dF disable fast-forward
haproxy-1  |         -dI enable insecure fork
haproxy-1  |         -dZ disable zero-copy forwarding
haproxy-1  |         -sf/-st [pid ]* finishes/terminates old pids.
haproxy-1  |         -x <unix_socket> get listening sockets from a unix socket
haproxy-1  |         -S <bind>[,<bind options>...] new master CLI
haproxy-1  | 
[Khaproxy-1 exited with code 1
[Kworker-2 exited with code 2
[Kworker-1 exited with code 2
[Kapi-2 exited with code 2
[Kapi-1 exited with code 2
redis-1    | 1:signal-handler (1754395710) Received SIGTERM scheduling shutdown...
redis-1    | 1:M 05 Aug 2025 12:08:30.611 * User requested shutdown...
redis-1    | 1:M 05 Aug 2025 12:08:30.611 * Saving the final RDB snapshot before exiting.
redis-1    | 1:M 05 Aug 2025 12:08:30.624 * DB saved on disk
redis-1    | 1:M 05 Aug 2025 12:08:30.624 # Redis is now ready to exit, bye bye...
[Kredis-1 exited with code 0
